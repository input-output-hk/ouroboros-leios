"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8070],{2453:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var i=n(4848),o=n(8453);const t={sidebar_position:6},r="FAQs",a={id:"faq",title:"FAQs",description:"What is Ouroboros Leios?",source:"@site/docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/docs/faq",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"documentationSidebar",previous:{title:"How it works",permalink:"/docs/how-it-works"},next:{title:"Glossary",permalink:"/docs/glossary"}},l={},d=[{value:"What is Ouroboros Leios?",id:"what-is-ouroboros-leios",level:2},{value:"What are the key benefits of Leios over other Ouroboros protocols?",id:"what-are-the-key-benefits-of-leios-over-other-ouroboros-protocols",level:2},{value:"What does Leios mean for Cardano users (eg, wallet users, DApp developers)?",id:"what-does-leios-mean-for-cardano-users-eg-wallet-users-dapp-developers",level:2},{value:"What are the risks or trade-offs of Leios?",id:"what-are-the-risks-or-trade-offs-of-leios",level:2},{value:"What are IBs, EBs, and RBs in Leios?",id:"what-are-ibs-ebs-and-rbs-in-leios",level:2},{value:"What is the relationship between Ouroboros, Peras, and Leios?",id:"what-is-the-relationship-between-ouroboros-peras-and-leios",level:2},{value:"Ouroboros: the foundation",id:"ouroboros-the-foundation",level:3},{value:"Peras: a modular upgrade",id:"peras-a-modular-upgrade",level:3},{value:"Leios: a scalability leap",id:"leios-a-scalability-leap",level:3},{value:"The relationship",id:"the-relationship",level:3},{value:"What&#39;s the state of an IB before an EB or RB gets created for it? Is it visible, is it usable?",id:"whats-the-state-of-an-ib-before-an-eb-or-rb-gets-created-for-it-is-it-visible-is-it-usable",level:2},{value:"State of an IB",id:"state-of-an-ib",level:3},{value:"Visibility",id:"visibility",level:3},{value:"Usability",id:"usability",level:3},{value:"If an IB isn&#39;t really usable until it&#39;s got an EB and RB, and RB&#39;s still take 20 seconds, how does this improve performance?",id:"if-an-ib-isnt-really-usable-until-its-got-an-eb-and-rb-and-rbs-still-take-20-seconds-how-does-this-improve-performance",level:2},{value:"Parallel processing boost",id:"parallel-processing-boost",level:3},{value:"Splitting the work",id:"splitting-the-work",level:3},{value:"Practical gains",id:"practical-gains",level:3},{value:"How does Leios maintain security with parallel processing?",id:"how-does-leios-maintain-security-with-parallel-processing",level:2},{value:"How does Leios handle voting stages, and what is &#39;send-recv&#39; voting?",id:"how-does-leios-handle-voting-stages-and-what-is-send-recv-voting",level:2},{value:"What is sortition in Leios, and how does &#39;Fait Accompli sortition&#39; work?",id:"what-is-sortition-in-leios-and-how-does-fait-accompli-sortition-work",level:2},{value:"What are the different block diffusion strategies, and why do they matter?",id:"what-are-the-different-block-diffusion-strategies-and-why-do-they-matter",level:2},{value:"Can the system be sharded or self-regulated?",id:"can-the-system-be-sharded-or-self-regulated",level:2},{value:"What improvements in cryptography are used in Leios?",id:"what-improvements-in-cryptography-are-used-in-leios",level:2},{value:"How do I estimate node operating costs for Leios?",id:"how-do-i-estimate-node-operating-costs-for-leios",level:2},{value:"What is the current status of Leios simulations?",id:"what-is-the-current-status-of-leios-simulations",level:2},{value:"Are there recommended parameters for running Leios nodes?",id:"are-there-recommended-parameters-for-running-leios-nodes",level:2},{value:"How do I keep track of Leios&#39;s progress and updates?",id:"how-do-i-keep-track-of-leioss-progress-and-updates",level:2},{value:"What are the downstream effects of deploying Leios?",id:"what-are-the-downstream-effects-of-deploying-leios",level:2},{value:"Could the mempool be sized according to the system&#39;s throughput?",id:"could-the-mempool-be-sized-according-to-the-systems-throughput",level:2},{value:"Is Leios production-ready?",id:"is-leios-production-ready",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"faqs",children:"FAQs"}),"\n",(0,i.jsx)(s.h2,{id:"what-is-ouroboros-leios",children:"What is Ouroboros Leios?"}),"\n",(0,i.jsxs)(s.p,{children:["Ouroboros Leios is a next-generation blockchain consensus protocol designed to\nmake Cardano faster and more scalable. It improves transaction throughput and\nreduces latency by splitting the work of processing transactions into a\nstreamlined, parallel process. Building on the core Ouroboros principles (as\nused by Cardano), Leios introduces separate input blocks (IBs) for transactions\nand endorser blocks (EBs) that validate them, enhancing the network\u2019s capacity.\nTo learn more see ",(0,i.jsx)(s.a,{href:"/docs/simple-explainer",children:"this simple explainer"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"what-are-the-key-benefits-of-leios-over-other-ouroboros-protocols",children:"What are the key benefits of Leios over other Ouroboros protocols?"}),"\n",(0,i.jsx)(s.p,{children:"Leios offers several significant advantages:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Higher throughput and lower latency:"})," by splitting transaction processing\ninto IB and EB stages, Leios handles more transactions in parallel, enabling\nfaster and more responsive applications"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Better user experience:"})," faster transaction processing means quicker\nconfirmations for wallet users and DApp interactions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Flexible diffusion strategies:"})," nodes can choose how to share blocks (eg,\nprioritizing the newest or the oldest data), optimizing network performance based on\nconditions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Enhanced cryptography:"})," Leios uses Boneh\u2013Lynn\u2013Shacham (BLS) signatures for\naggregated verification and verifiable random functions (VRFs) for fair leader\nselection"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Robust simulations and formal methods:"})," Rust and Haskell simulations\nmeasure real-world performance, and executable specifications ensure\ncorrectness"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Scalable cost model:"})," a cost calculator helps node operators estimate\nexpenses (for example, storage and CPU usage)."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"what-does-leios-mean-for-cardano-users-eg-wallet-users-dapp-developers",children:"What does Leios mean for Cardano users (eg, wallet users, DApp developers)?"}),"\n",(0,i.jsx)(s.p,{children:"For everyday users, Leios means faster transaction confirmations and a smoother\nexperience in wallets and DApps\u2014think near-instant payments or interactions\ninstead of waiting 20 seconds or more. For developers, it offers higher\nthroughput (more transactions per second), enabling complex, high-volume\napplications like decentralized exchanges or gaming platforms. However, wallets,\nexplorers, and APIs will need updates to handle Leios\u2019 new block types (IBs,\nEBs, RBs), so expect some transition as it rolls out."}),"\n",(0,i.jsx)(s.h2,{id:"what-are-the-risks-or-trade-offs-of-leios",children:"What are the risks or trade-offs of Leios?"}),"\n",(0,i.jsx)(s.p,{children:"Leios prioritizes scalability, but it\u2019s not without trade-offs. Parallel\nprocessing increases demands on node operators (eg, more CPU, bandwidth,\nstorage), potentially raising costs or requiring better hardware. The complexity\nof the three block types (IBs, EBs, RBs) could also introduce new bugs or delays\nduring implementation. However, extensive simulations and formal methods aim to\nminimize these risks, ensuring Leios remains secure and reliable as it matures."}),"\n",(0,i.jsx)(s.h2,{id:"what-are-ibs-ebs-and-rbs-in-leios",children:"What are IBs, EBs, and RBs in Leios?"}),"\n",(0,i.jsx)(s.p,{children:"Leios uses three distinct block types:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"IB (input block)"}),". A block that contains transactions. Produced by nodes\nthat win the IB sortition lottery."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EB (endorser block)"}),". A block that references one or more IBs, providing\nendorsements. Produced by nodes that win the EB sortition lottery."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RB (ranking block)"}),". A block that ranks or orders other blocks as part of\nthe consensus mechanism."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Each block type plays a distinct role in moving transactions from submission to\nfinal confirmation. IBs are minted frequently, EBs validate in parallel, RBs\noccur every ~20 seconds."}),"\n",(0,i.jsx)(s.h2,{id:"what-is-the-relationship-between-ouroboros-peras-and-leios",children:"What is the relationship between Ouroboros, Peras, and Leios?"}),"\n",(0,i.jsx)(s.h3,{id:"ouroboros-the-foundation",children:"Ouroboros: the foundation"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"What it is: Ouroboros is the overarching family of proof-of-stake (PoS)\nconsensus protocols that powers Cardano. It\u2019s designed to be secure,\nenergy-efficient, and provably fair, replacing proof-of-work (PoW) systems\nlike Bitcoin\u2019s."}),"\n",(0,i.jsxs)(s.li,{children:["Key features:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Slot-based time division (epochs and slots, with slots typically 1 second\nlong in earlier versions, now 20 seconds in Praos for block production)"}),"\n",(0,i.jsx)(s.li,{children:"Stake pool leaders elected based on stake to mint blocks"}),"\n",(0,i.jsx)(s.li,{children:"Formal mathematical proofs of security (for example, resistance to attacks like\ndouble-spending or chain forks)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Role: Ouroboros is the bedrock consensus mechanism that Peras and Leios build\nupon or refine."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"peras-a-modular-upgrade",children:"Peras: a modular upgrade"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"What it is: Peras is a proposed evolution of Ouroboros aimed at improving\nefficiency and modularity."}),"\n",(0,i.jsxs)(s.li,{children:["Key features:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Separation of concerns. Peras splits consensus into modular components, such\nas transaction ordering, validation, and ledger state updates, to allow\nparallel processing and flexibility."}),"\n",(0,i.jsx)(s.li,{children:"Improved finality. It introduces mechanisms for faster confirmation times."}),"\n",(0,i.jsx)(s.li,{children:"Separation of concerns. Peras splits consensus into modular components, such\nas transaction ordering, validation, and ledger state updates to allow\nparallel processing and flexibility."}),"\n",(0,i.jsx)(s.li,{children:"Improved finality. It introduces mechanisms for faster confirmation times,\npotentially reducing the time to finality compared to Praos\u2019 20-second block\nintervals."}),"\n",(0,i.jsx)(s.li,{children:"Adaptability. Designed to integrate with future scaling solutions (like\nLeios) and sidechains or layer-2 systems."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Relationship to Ouroboros:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Peras is a direct descendant of Ouroboros Praos, refining its mechanics\nwhile staying within the PoS framework. It\u2019s like an 'Ouroboros 2.0,'\noptimizing the core protocol without fundamentally changing its PoS nature."}),"\n",(0,i.jsx)(s.li,{children:"It serves as a bridge between the foundational Ouroboros Praos and more\nradical scalability-focused variants like Leios."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"leios-a-scalability-leap",children:"Leios: a scalability leap"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"What it is: Ouroboros Leios is a specific variant of the Ouroboros family,\ndesigned to dramatically increase Cardano\u2019s throughput (transactions per\nsecond, TPS) while maintaining security. It\u2019s an experimental or future-state\nprotocol, not yet live as of March 2025, but actively discussed in Cardano\u2019s\nresearch community."}),"\n",(0,i.jsxs)(s.li,{children:["Relationship to Ouroboros:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Leios is a specialized extension of Ouroboros, taking the core PoS mechanics\nand re-architecting block production for scalability."}),"\n",(0,i.jsx)(s.li,{children:"It retains Ouroboros\u2019 security model but reimagines how transactions are\ningested and validated, making it a next-generation Ouroboros variant."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"the-relationship",children:"The relationship"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ouroboros as the core:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ouroboros (especially Praos) is the foundational consensus protocol that\ndefines Cardano\u2019s PoS system. Both Peras and Leios are built on this\nfoundation, inheriting its security properties and stake-based governance."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Peras as an intermediate step:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Peras enhances Ouroboros by introducing modularity and efficiency\nimprovements, potentially laying the groundwork for integrating advanced\nfeatures like those in Leios. It\u2019s a stepping stone that refines Praos\u2019\nmechanics, making it more adaptable to future needs."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Leios as a scalability solution:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Leios takes Ouroboros further by addressing throughput limitations head-on.\nIt uses the same PoS principles but introduces a parallel processing model\nthat Peras\u2019 modularity could theoretically support or complement."}),"\n",(0,i.jsx)(s.li,{children:"Leios can be seen as a 'plugin' or evolution that fits into the Ouroboros\necosystem, possibly relying on Peras\u2019 groundwork for smoother integration."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Timeline and evolution:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ouroboros Praos \u2192 current live protocol."}),"\n",(0,i.jsx)(s.li,{children:"Peras \u2192 a near-future refinement for flexibility and efficiency."}),"\n",(0,i.jsx)(s.li,{children:"Leios \u2192 a long-term scalability solution, still in research/development,\naimed at making Cardano competitive with high-TPS blockchains like Solana or\nEthereum layer-2s."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"whats-the-state-of-an-ib-before-an-eb-or-rb-gets-created-for-it-is-it-visible-is-it-usable",children:"What's the state of an IB before an EB or RB gets created for it? Is it visible, is it usable?"}),"\n",(0,i.jsx)(s.p,{children:"Before an endorsement block (EB) or ranking block (RB) is created, an input\nblock (IB) is a proposed set of transactions in a preliminary state. Here\u2019s what\nthat means:"}),"\n",(0,i.jsx)(s.h3,{id:"state-of-an-ib",children:"State of an IB"}),"\n",(0,i.jsx)(s.p,{children:"An IB is minted by a node (eg, a stake pool operator) and contains unconfirmed\ntransactions from the mempool. It\u2019s cryptographically signed for authenticity\nbut hasn\u2019t been validated or finalized by the network, leaving it in a pending\nstate."}),"\n",(0,i.jsx)(s.h3,{id:"visibility",children:"Visibility"}),"\n",(0,i.jsx)(s.p,{children:"Once minted, the IB is broadcast and visible to all nodes. This allows them to\ninspect its transactions and start validation, a key part of Leios\u2019 parallel\nprocessing design. However, visibility doesn\u2019t mean it\u2019s accepted \u2014 it\u2019s just a\nproposal."}),"\n",(0,i.jsx)(s.h3,{id:"usability",children:"Usability"}),"\n",(0,i.jsx)(s.p,{children:"The IB isn\u2019t usable yet \u2014 its transactions can\u2019t be spent or relied upon because\nthey lack consensus and finality. Only after EBs endorse it and an RB finalizes\nit does it become part of the blockchain\u2019s official state. Until then, it could\nstill be discarded if it fails validation."}),"\n",(0,i.jsx)(s.h2,{id:"if-an-ib-isnt-really-usable-until-its-got-an-eb-and-rb-and-rbs-still-take-20-seconds-how-does-this-improve-performance",children:"If an IB isn't really usable until it's got an EB and RB, and RB's still take 20 seconds, how does this improve performance?"}),"\n",(0,i.jsx)(s.p,{children:"Leios boosts performance by processing transactions in parallel, even though\nfinal confirmation still takes 20 seconds. Here\u2019s how:"}),"\n",(0,i.jsx)(s.h3,{id:"parallel-processing-boost",children:"Parallel processing boost"}),"\n",(0,i.jsx)(s.p,{children:"Think of Leios like a factory: in Ouroboros Praos, one worker (a slot leader)\nbuilds a block every 20 seconds. In Leios, dozens of workers (nodes) create\nIBs continuously, others check them with EBs, and a supervisor (RB) approves the batch every 20 seconds.\nThis parallelism lets the network handle far more transactions in that\ntime \u2014 potentially 10x to 100x more than Praos."}),"\n",(0,i.jsx)(s.h3,{id:"splitting-the-work",children:"Splitting the work"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"IBs"}),". Propose transactions frequently and in parallel."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EBs"}),". Validate IBs concurrently across nodes."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RBs"}),". Finalize everything every 20 seconds, ensuring security. Unlike\nPraos, where one block does it all, Leios splits these roles so transaction\nprocessing isn\u2019t bottlenecked by the 20-second RB interval."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"practical-gains",children:"Practical gains"}),"\n",(0,i.jsx)(s.p,{children:"While IBs aren\u2019t spendable until an RB confirms them, EBs provide early\nconfidence, letting apps (like wallets) act on them sooner for low-risk tasks\n(for example, showing balances). The 20-second RB is a security anchor, not a\nlimit\u2014hundreds of IBs can queue up in that window, massively increasing\nthroughput."}),"\n",(0,i.jsx)(s.h2,{id:"how-does-leios-maintain-security-with-parallel-processing",children:"How does Leios maintain security with parallel processing?"}),"\n",(0,i.jsx)(s.p,{children:"Leios preserves Cardano\u2019s strong security by combining parallel transaction\nprocessing with a sequential finality layer. IBs and EBs are produced in parallel, but RBs finalize the\nledger every 20 seconds, ensuring a single, consistent chain. This prevents\ndouble-spending or forks by resolving conflicts at the RB stage. Additionally,\ncryptographic tools like BLS signatures and VRFs ensure that only valid blocks\nfrom authorized nodes are accepted, maintaining Ouroboros\u2019 provable security\nguarantees."}),"\n",(0,i.jsx)(s.h2,{id:"how-does-leios-handle-voting-stages-and-what-is-send-recv-voting",children:"How does Leios handle voting stages, and what is 'send-recv' voting?"}),"\n",(0,i.jsx)(s.p,{children:"Leios finalizes blocks through a structured voting mechanism. Nodes may adopt:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Single-stage voting"}),": all votes are broadcast in one phase, possibly\nresulting in a longer CPU usage 'tail' during high throughput"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Send-recv (two-stage) voting"}),": votes are first sent, then a follow-up\nreceive phase ensures broader propagation before final tallies."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"You can configure voting through parameters such as leios-vote-send-recv-stages\nin simulation environments."}),"\n",(0,i.jsx)(s.h2,{id:"what-is-sortition-in-leios-and-how-does-fait-accompli-sortition-work",children:"What is sortition in Leios, and how does 'Fait Accompli sortition' work?"}),"\n",(0,i.jsx)(s.p,{children:"Sortition is a probabilistic method for selecting nodes (based on stake) to\nproduce blocks or issue votes. In Leios, it is referred to as 'Fait Accompli\nsortition' because once a node proves it was selected to produce a block or vote\n(using a cryptographic proof), no conflicting claims can arise."}),"\n",(0,i.jsx)(s.h2,{id:"what-are-the-different-block-diffusion-strategies-and-why-do-they-matter",children:"What are the different block diffusion strategies, and why do they matter?"}),"\n",(0,i.jsx)(s.p,{children:"Leios supports multiple strategies for propagating blocks and votes:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Oldest-first"}),": prioritizes older blocks or transactions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Freshest-first"}),": focuses on the newest blocks or transactions first"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Peer-order"}),": requests blocks in the order peers announce them."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Your choice of strategy can affect latency, network load, and overall\nthroughput."}),"\n",(0,i.jsx)(s.h2,{id:"can-the-system-be-sharded-or-self-regulated",children:"Can the system be sharded or self-regulated?"}),"\n",(0,i.jsx)(s.p,{children:"Not in its current design. Every node validates the entire chain. Thus, adding\nmore nodes does not inherently increase throughput in the same way sharded\nprotocols do. The community votes on protocol parameters (for example, block\nsize), and the system's load is the same for all. Future research may explore\nsharding, but it is not yet part of Leios."}),"\n",(0,i.jsx)(s.h2,{id:"what-improvements-in-cryptography-are-used-in-leios",children:"What improvements in cryptography are used in Leios?"}),"\n",(0,i.jsx)(s.p,{children:"Leios incorporates multiple cryptographic techniques to ensure security and\nefficiency:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"BLS signatures: allow efficient aggregation of many signatures into one,\nreducing verification overhead"}),"\n",(0,i.jsx)(s.li,{children:"Mithril or Musen protocols: used for voting and proof aggregation, depending\non the context"}),"\n",(0,i.jsx)(s.li,{children:"VRFs: ensure fair selection of nodes for block production."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Recent benchmarking shows that aggregated BLS verification significantly speeds\nup certificate validation."}),"\n",(0,i.jsx)(s.h2,{id:"how-do-i-estimate-node-operating-costs-for-leios",children:"How do I estimate node operating costs for Leios?"}),"\n",(0,i.jsx)(s.p,{children:"Leios provides an online cost calculator that considers:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"CPU usage and the number of cores"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Bandwidth consumption"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Storage"})," (including the default assumption of 50% disk compression)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Perpetual storage cost amortization"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"It also supports hyperscale and discount cloud providers. For example, you can\nmodel single-relay or multi-relay deployments at variable bandwidths."}),"\n",(0,i.jsx)(s.h2,{id:"what-is-the-current-status-of-leios-simulations",children:"What is the current status of Leios simulations?"}),"\n",(0,i.jsx)(s.p,{children:"Two primary simulation frameworks (Rust and Haskell) are maintained to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Test network topologies and measure real or simulated latencies (using the\nDeltaQ model)"}),"\n",(0,i.jsx)(s.li,{children:"Evaluate CPU usage for blocks and transactions under varying loads"}),"\n",(0,i.jsx)(s.li,{children:"Visualize block diffusion (IBs, EBs, and RBs) using different strategies"}),"\n",(0,i.jsx)(s.li,{children:"Compare ideal conditions vs realistic mainnet-like topologies."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Developers continually refine these simulations based on real-world data."}),"\n",(0,i.jsx)(s.h2,{id:"are-there-recommended-parameters-for-running-leios-nodes",children:"Are there recommended parameters for running Leios nodes?"}),"\n",(0,i.jsx)(s.p,{children:"Based on preliminary internal testing and simulations:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Block size"}),": commonly set to about one-third of the available link capacity\nfor IBs"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Voting stages"}),": choose single-stage or send-recv, depending on reliability\nand speed requirements"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Diffusion strategy"}),": many operators use 'freshest-first,' though\n'peer-order' may help maintain compatibility with older setups."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Operators can adjust these parameters, which evolve through community votes."}),"\n",(0,i.jsx)(s.h2,{id:"how-do-i-keep-track-of-leioss-progress-and-updates",children:"How do I keep track of Leios's progress and updates?"}),"\n",(0,i.jsx)(s.p,{children:"You can follow:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Weekly updates on the Ouroboros Leios site"}),"\n",(0,i.jsx)(s.li,{children:"Technical reports for deeper insights"}),"\n",(0,i.jsx)(s.li,{children:"Leios glossary for definitions of commonly used terms"}),"\n",(0,i.jsx)(s.li,{children:"Public GitHub repositories that host source code and simulations."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"These resources provide transparency and regular updates on ongoing development."}),"\n",(0,i.jsx)(s.h2,{id:"what-are-the-downstream-effects-of-deploying-leios",children:"What are the downstream effects of deploying Leios?"}),"\n",(0,i.jsx)(s.p,{children:"Leios changes how transactions are validated and how blocks and memory pools\noperate, potentially affecting:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Wallets and SDKs"}),", which need to accommodate new block types (IBs and EBs)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Explorers"}),", which must handle higher throughput and multi-block referencing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Indexers and APIs"}),", which will see more granular block and vote data."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Weekly updates provide a deeper analysis of these topics, including how advanced\nindexing and potential sharding solutions might eventually mitigate challenges."}),"\n",(0,i.jsx)(s.h2,{id:"could-the-mempool-be-sized-according-to-the-systems-throughput",children:"Could the mempool be sized according to the system's throughput?"}),"\n",(0,i.jsx)(s.p,{children:"That's already the case. The default mempool size is a small multiple of the\ncurrent block size."}),"\n",(0,i.jsx)(s.h2,{id:"is-leios-production-ready",children:"Is Leios production-ready?"}),"\n",(0,i.jsx)(s.p,{children:"Leios remains an active research and development protocol. It is backed by a\nrobust formal methods framework and two major simulation environments. However,\nit has not reached full production status. Watch the official updates and\ntechnical reports for major release announcements."})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(6540);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);