"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3128],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}},8610:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var t=i(4848),s=i(8453);const l={title:"Weekly Summary \u2013 February 3, 2025",authors:["will"],tags:["progress","update","weekly","haskell-simulation","cryptography","implementation","cost-calculator","throughput","rust-simulation","visualization"]},a=void 0,r={permalink:"/news/2025/02/03/weekly-progress-summary",source:"@site/news/2025-02-03-weekly-progress-summary.md",title:"Weekly Summary \u2013 February 3, 2025",description:"This week, the Leios team worked on cryptography benchmarking and cost calculator improvements. The team completed a reference implementation for Leios cryptography and enhanced the online cost calculator with user-requested features. They also updated both Haskell and Rust simulations to improve visualization and network modeling capabilities.",date:"2025-02-03T00:00:00.000Z",tags:[{inline:!0,label:"progress",permalink:"/news/tags/progress"},{inline:!0,label:"update",permalink:"/news/tags/update"},{inline:!0,label:"weekly",permalink:"/news/tags/weekly"},{inline:!0,label:"haskell-simulation",permalink:"/news/tags/haskell-simulation"},{inline:!0,label:"cryptography",permalink:"/news/tags/cryptography"},{inline:!0,label:"implementation",permalink:"/news/tags/implementation"},{inline:!0,label:"cost-calculator",permalink:"/news/tags/cost-calculator"},{inline:!0,label:"throughput",permalink:"/news/tags/throughput"},{inline:!0,label:"rust-simulation",permalink:"/news/tags/rust-simulation"},{inline:!0,label:"visualization",permalink:"/news/tags/visualization"}],readingTime:1.705,hasTruncateMarker:!1,authors:[{name:"William Wolff",title:"Architect",url:"https://github.com/will-break-it",imageURL:"https://avatars.githubusercontent.com/u/9065638?v=4",key:"will"}],frontMatter:{title:"Weekly Summary \u2013 February 3, 2025",authors:["will"],tags:["progress","update","weekly","haskell-simulation","cryptography","implementation","cost-calculator","throughput","rust-simulation","visualization"]},unlisted:!1,prevItem:{title:"Weekly Summary \u2013 February 10, 2025",permalink:"/news/2025/02/10/weekly-progress-summary"},nextItem:{title:"Weekly Summary \u2013 January 27, 2025",permalink:"/news/2025/01/27/weekly-progress-summary"}},o={authorsImageUrls:[void 0]},c=[{value:"Haskell simulation",id:"haskell-simulation",level:2},{value:"Cryptography implementation",id:"cryptography-implementation",level:2},{value:"Cost calculator improvements",id:"cost-calculator-improvements",level:2},{value:"Throughput simulator",id:"throughput-simulator",level:2},{value:"Rust simulation",id:"rust-simulation",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This week, the Leios team worked on cryptography benchmarking and cost calculator improvements. The team completed a reference implementation for Leios cryptography and enhanced the online cost calculator with user-requested features. They also updated both Haskell and Rust simulations to improve visualization and network modeling capabilities."}),"\n",(0,t.jsx)(n.h2,{id:"haskell-simulation",children:"Haskell simulation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Added support for ",(0,t.jsx)(n.code,{children:"Send"})," and ",(0,t.jsx)(n.code,{children:"Receive"})," voting stages, providing:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A new ",(0,t.jsx)(n.code,{children:"leios-vote-send-recv-stages"})," configuration option"]}),"\n",(0,t.jsxs)(n.li,{children:["A configurable stage length via ",(0,t.jsx)(n.code,{children:"leios-stage-active-voting-slots"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Implemented multiple diffusion strategies:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added oldest-first strategy"}),"\n",(0,t.jsxs)(n.li,{children:["Added configurable strategies for IBs, EBs, and votes via ",(0,t.jsx)(n.code,{children:"*-diffusion-strategy"}),"\nconfigurations"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Created a new ",(0,t.jsx)(n.code,{children:"small"})," scenario for 100 nodes with 2,000 kB links","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tuned IB parameters to utilize one-third of link capacity"}),"\n",(0,t.jsxs)(n.li,{children:["Added configurations for both ",(0,t.jsx)(n.code,{children:"single-stage"})," and ",(0,t.jsx)(n.code,{children:"send-recv"})," voting"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Fixed several simulation behaviors:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Improved block generation logic"}),"\n",(0,t.jsx)(n.li,{children:"Prevented duplicate EB inclusion in the base chain"}),"\n",(0,t.jsx)(n.li,{children:"Confirmed proper EB inclusion timing relative to vote diffusion"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["The main difference observed between ",(0,t.jsx)(n.code,{children:"single-stage"})," and ",(0,t.jsx)(n.code,{children:"send-recv"})," is that the former\nshows a longer tail in the CPU usage CDF when the simulation is run with unlimited\ncores."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cryptography-implementation",children:"Cryptography implementation"}),"\n",(0,t.jsx)(n.p,{children:"The Rust benchmarks for Leios cryptography were redesigned as a reference\nimplementation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Implemented the Fait Accompli sortition"}),"\n",(0,t.jsx)(n.li,{children:"Enhanced sortition to use rational arithmetic instead of quad-precision floats"}),"\n",(0,t.jsx)(n.li,{children:"Added Quickcheck tests for all capabilities"}),"\n",(0,t.jsx)(n.li,{children:"Added benchmarks for serialization"}),"\n",(0,t.jsx)(n.li,{children:"Optimized vote and certificate size."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cost-calculator-improvements",children:"Cost calculator improvements"}),"\n",(0,t.jsxs)(n.p,{children:["The team enhanced the\n",(0,t.jsx)(n.a,{href:"https://leios.cardano-scaling.org/cost-estimator/",children:"online Leios cost calculator"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Added support for both hyperscale and discount cloud providers"}),"\n",(0,t.jsx)(n.li,{children:"Made discount providers the default option"}),"\n",(0,t.jsx)(n.li,{children:"Added option to amortize storage costs perpetually"}),"\n",(0,t.jsxs)(n.li,{children:["Updated defaults:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Single relay deployment"}),"\n",(0,t.jsx)(n.li,{children:"More conservative 50% disk compression"}),"\n",(0,t.jsx)(n.li,{children:"Perpetual storage cost amortization."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"throughput-simulator",children:"Throughput simulator"}),"\n",(0,t.jsxs)(n.p,{children:["The team updated the\n",(0,t.jsx)(n.a,{href:"https://www.insightmaker.com/insight/4DU4kmFVCFDaq30ux29PCe/Cardano-Throughput-v0-3",children:"Cardano throughput simulator"}),"\nwith:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The latest cloud-computing cost model"}),"\n",(0,t.jsx)(n.li,{children:"Synchronized assumptions with an online cost calculator."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rust-simulation",children:"Rust simulation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Made minor fixes to the new graph generation strategy"}),"\n",(0,t.jsx)(n.li,{children:"Planned out a roadmap for visualization work focusing on the Leios transaction\nlifecycle."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);