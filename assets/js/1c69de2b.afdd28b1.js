"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5177],{5272:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/04/14/weekly-progress-summary","metadata":{"permalink":"/news/2025/04/14/weekly-progress-summary","source":"@site/news/2025-04-14-weekly-progress-summary.md","title":"Weekly Summary \u2013 April 14, 2025","description":"This week, the team achieved significant milestones in both the Haskell and Rust simulations, improved cost estimates, and conducted comprehensive analyses of transaction lifecycle and Full Leios simulations.","date":"2025-04-14T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":2.385,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 April 14, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"nextItem":{"title":"Weekly Summary \u2013 April 7, 2025","permalink":"/news/2025/04/07/weekly-progress-summary"}},"content":"This week, the team achieved significant milestones in both the Haskell and Rust simulations, improved cost estimates, and conducted comprehensive analyses of transaction lifecycle and Full Leios simulations.\\n\\n### Simulation improvements\\n\\n#### Haskell simulation\\n- Completed first draft of new mini protocols for leios diffusion\\n  - Protocols modeled after BlockFetch and node-to-node Tx-Submission from ouroboros-network\\n  - IB-relay, EB-relay, Vote-relay for header diffusion and body announcements\\n  - IB-fetch, EB-fetch for body diffusion\\n  - CatchUp protocol for older blocks\\n  - See `simulation/docs/network-spec` for complete protocol details\\n- Renamed `short-leios` command to `leios` since it now covers full variant as well\\n  - `short-leios` is kept as alias for compatibility\\n\\n#### Rust simulation\\n- Fixed conformance with shared trace format\\n- Fixed bug with voting logic which was preventing EBs from receiving enough votes to get on-chain\\n- Updated visualization to use smaller trace files to prepare for hosting on docs site\\n\\n### Revisions to cost dashboard\\n\\nThe [cost dashboard](https://leios.cardano-scaling.org/cost-estimator/) was updated with lower and more realistic IO estimates.\\n\\n### Analysis of transaction lifecycle\\n\\nThe Jupyter notebook [Analysis of transaction lifecycle](https://github.com/input-output-hk/ouroboros-leios/blob/leios-2025w17/analysis/tx-to-block.ipynb) estimates the delay imposed by each of the seven stages of Full Leios as a transaction moves from memory pool to being referenced by a Praos block.\\n\\nKey findings from the analysis:\\n1. There seems little advantage to moving to stage lengths less than 10 slots\\n2. The number of shards should be kept small enough so that the IB rate per shard is high relative to the stage length\\n3. Low EB rates result in many orphaned IBs\\n4. Realistic parameter settings result in an approximately two-minute delay between transaction submission and its referencing by an RB\\n\\nPotential next steps:\\n- Translating this model into Delta QSD to include network effects\\n- Comparing this model\'s results to output of the Rust simulator\\n- Elaborating the model to represent the memory-pool and ledger variants under consideration\\n\\n### Simulation and analysis of Full Leios\\n\\nThe team conducted comprehensive simulations using both Haskell and Rust simulators at tag [leios-2025w16](https://github.com/input-output-hk/ouroboros-leios/releases/tag/leios-2025w16). The simulations covered 648 scenarios of Full and Short Leios with varied parameters:\\n- IB production rate\\n- IB size\\n- EB production rate\\n- Stage length\\n- CPU constraints\\n\\nTwo new output files were generated:\\n1. Summary of network, disk, and CPU resource usage over the course of the simulation\\n2. Vertices and edges of the \\"Leios graph\\" showing linkages between transactions, IBs, EBs, RBs, and votes (can be visualized as an interactive web page)\\n\\nKey findings:\\n- Agreement between Rust and Haskell simulations is generally quite close\\n- The Haskell simulation experiences network congestion at 16 IB/s, but the Rust simulation does not\\n- The Rust simulation uses more CPU at high IB rates than the Haskell simulation\\n- The Rust simulation sometimes does not produce enough votes to certify an EB\\n\\nDetailed results are available in the Jupyter notebook [analysis/sims/2025w16/analysis.ipynb](https://github.com/input-output-hk/ouroboros-leios/blob/leios-2025w17/analysis/sims/2025w16/analysis.ipynb)."},{"id":"/2025/04/07/weekly-progress-summary","metadata":{"permalink":"/news/2025/04/07/weekly-progress-summary","source":"@site/news/2025-04-07-weekly-progress-summary.md","title":"Weekly Summary \u2013 April 7, 2025","description":"This week, the team continued refining the protocol and its simulation capabilities, making significant progress in addressing various topics.","date":"2025-04-07T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":2.28,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 April 7, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 April 14, 2025","permalink":"/news/2025/04/14/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 March 31, 2025","permalink":"/news/2025/03/31/weekly-progress-summary"}},"content":"This week, the team continued refining the protocol and its simulation capabilities, making significant progress in addressing various topics.\\n\\n### Simulation improvements\\n\\n#### Haskell simulation\\n- Started specifying a new relay protocol for IB header diffusion without the body\\n- Improved the shared log format by removing redundancies and harmonizing naming\\n- Added support for additional events required by conformance testing, including `SlotEvent` and `NoBlockEvent`\\n  - These events can be enabled using the `--conformance-events` flag with `--shared-log-format`.\\n\\n#### Rust simulation\\n- Updated traces to match the new standardized trace format\\n- Fixed a critical bug in CPU scheduling where nodes were using more cores than allocated.\\n\\n### Analysis of workflow optimization\\n\\nThe team significantly improved the workflow for analyzing both Haskell and Rust simulations:\\n\\n- Replaced MongoDB with more efficient `jq` queries using map-reduce operations\\n- Created reusable library functions for plotting with R\\n- Revised and streamlined scripts for creating, executing, and analyzing simulations\\n- Made the Jupyter notebook for analyses more generic and reusable\\n- Successfully tested the new workflow on tag `leios-2025w15`.\\n\\nThese improvements will enable faster setup and execution of future simulation experiments, with quicker turnaround times for analysis. During this optimization work, several discrepancies between the Haskell and Rust simulations were identified and documented as GitHub issues for future investigation.\\n\\n### Edinburgh workshop recaps\\n\\nThe Edinburgh workshop documentation has been made available, covering key discussions and decisions:\\n\\n#### Day 1 highlights\\n- Explored ledger design options comparing labeled UTXOs (explicit shards) vs accounts (implicit shards) approaches\\n- Discussed conformance testing strategies including QuickCheck dynamic and trace verification approaches\\n- Analyzed critical edge cases for user onboarding and system properties.\\n\\n#### Day 2 highlights\\n- Conducted a detailed analysis of Leios node costs across different TPS levels\\n- Key findings on resource usage:\\n  - At 10 TPS: 1.8x increase in egress and 6x increase in compute compared to Praos\\n  - At 1K TPS: significant scaling improvements with better resource efficiency\\n- Provided recommendations for potential integration with Peras, particularly to optimize the voting mechanism\\n- Discussed performance characteristics at both high and low throughput levels.\\n\\n#### Day 3 highlights\\n- Held an in-depth discussion on optimistic ledger state references, exploring three main approaches:\\n  1. RB reference: highest security but highest latency\\n  2. EB reference: balanced approach with medium security and latency\\n  3. EB-DAG: advanced approach using directed acyclic graph structure\\n- Key advantages of the EB-DAG approach:\\n  - Achieves low latency while maintaining security\\n  - Provides strong inclusion guarantees for EBs\\n  - Enables efficient state management and reconstruction\\n  - Creates a complete, verifiable chain history\\n- Discussed implementation considerations for state management and block ordering under the EB-DAG model.\\n\\nFor more information, please see the full workshop recaps in the [Leios documentation](https://github.com/input-output-hk/ouroboros-leios/tree/main/docs/workshop)."},{"id":"/2025/03/31/weekly-progress-summary","metadata":{"permalink":"/news/2025/03/31/weekly-progress-summary","source":"@site/news/2025-03-31-weekly-progress-summary.md","title":"Weekly Summary \u2013 March 31, 2025","description":"This week, the Leios team met for an in-person workshop in Edinburgh and continued their efforts in refining the protocol and its simulation capabilities. The team made significant progress in addressing various topics.","date":"2025-03-31T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":2.25,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 March 31, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 April 7, 2025","permalink":"/news/2025/04/07/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 March 24, 2025","permalink":"/news/2025/03/24/weekly-progress-summary"}},"content":"This week, the Leios team met for an in-person workshop in Edinburgh and continued their efforts in refining the protocol and its simulation capabilities. The team made significant progress in addressing various topics.\\n\\n# Workshop summaries\\n\\nOn [day one](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-1-recap.md), the team discussed topics such as ledger design and trade-offs, as well as two different ways to link the formal specification to the simulations. They explored various ledger design options, including *labeled UTXOs* and *accounts* approaches, with detailed consideration of fees, collateral, and conflict prevention mechanisms. The team also discussed conformance testing approaches, including *QuickCheck dynamic and trace verification* methods.\\n\\nOn [day two](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-2-recap.md), the team made significant progress towards estimating the cost of running a Leios node, considering different cost items such as network egress, CPU, and storage. They analyzed resource usage across different TPS levels, from 10 TPS to 1K TPS, and discovered that while there\u2019s significant overhead at low throughput, the protocol becomes more efficient at higher TPS levels. The team hasn\u2019t been able to finish all the cost items yet. The last two, IOPS and memory cost, will be added during this month.\\n\\nOn the [last and third day](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-3-recap.md), the team consolidated their options for how optimistic validation of input blocks can be accomplished. They defined three candidates, with one being favored. The main goal was to support the chaining of transactions with Leios, which requires defining a \'point in time\' or stage of the protocol at which a subsequent or chained transaction can be built on top of an already submitted transaction. This can be achieved by having the node optimistically compute prospective ledger states using its local knowledge of input blocks referenced in certified endorser blocks or possibly ranking blocks.\\n\\n- [Day 1](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-1-recap.md)\\n\\n- [Day 2](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-2-recap.md)\\n\\n- [Day 3](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/workshop/day-3-recap.md).\\n\\n\\n## Simulation progress\\n\\n- **Haskell simulation**\\n  - Added support for dishonest nodes that diffuse an unbounded amount of old IBs, enabling further analysis of freshest-first and oldest-first vote delivery scenarios\\n  - Identified and fixed a bug in configuration generation for simulation runs, which was causing inconsistencies in vote delivery between default and uniform/extended voting schemes\\n  - Added an `adversarial` field to the network topology schema, allowing for the simulation of unbounded IB diffusion by dishonest nodes.\\n\\n## Ongoing investigations\\n\\n- Investigating the effects of unbounded IB diffusion on IB delivery reliability and protocol performance under such conditions\\n- Working on quantifying settlement times and their impact on protocol performance\\n- Exploring integration possibilities with Ouroboros Peras, mainly focusing on potentially reusing their voting mechanism to reduce resource consumption.\\n\\n## Additional resources\\n\\n- [GitHub discussions](https://github.com/input-output-hk/ouroboros-leios/discussions/243) \u2013 EB ledger states and \'history rewriting\' effects\\n- [The First Full Leios simulation analysis](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w13/analysis.ipynb) \u2013 detailed analysis of the latest simulation results."},{"id":"/2025/03/24/weekly-progress-summary","metadata":{"permalink":"/news/2025/03/24/weekly-progress-summary","source":"@site/news/2025-03-24-weekly-progress-summary.md","title":"Weekly Summary \u2013 March 24, 2025","description":"This week, the Leios team continued working on various aspects of the protocol and its simulation capabilities. They made progress in implementing and testing the Haskell and Rust simulators, focusing on protocol behavior under different network conditions.","date":"2025-03-24T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.485,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 March 24, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 March 31, 2025","permalink":"/news/2025/03/31/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 March 17, 2025","permalink":"/news/2025/03/17/weekly-progress-summary"}},"content":"This week, the Leios team continued working on various aspects of the protocol and its simulation capabilities. They made progress in implementing and testing the Haskell and Rust simulators, focusing on protocol behavior under different network conditions.\\n\\n## Simulation progress\\n\\n- **Haskell simulation**\\n  - Moved configuration and topology parsers to the `leios-trace-hs` package for reuse in formal methods\\n  - Investigated differences in IBs referenced with Rust simulation: identified that inconsistencies were caused by the same sequence of random samples being used across different runs\\n  - Simplified sortition code by using an external statistics package\\n  - Tested Full Leios, resolving tension between `r_EB`/`eb-max-age-slots` and `praos-chain-quality`/`\u03b7`\\n  - Fixed `cabal run ols -- generate-topology close-and-random`, listing `producers` properly and decreasing variance in upstream peers.\\n\\n- **Rust simulation**\\n  - Investigated anomalies in simulation results: identified that earlier IB production failures were caused by low connectivity and lower CPU usage compared to the Haskell simulation\\n  - Refined Full Leios implementation\\n  - Added Full Leios support to the visualizer\\n  - Migrated the visualizer from Next.js to Vite.\\n\\n## Analysis of simulations\\n\\n- **Tag `leios-2025w13`:** simulated 198 Short Leios scenarios, varying IB production rate, IB size, network topology, CPU limits, and protocol flags\\n- **CPU limits:** analyzed the impact of CPU constraints on IB propagation, finding that diffusion can be affected under stress conditions\\n- **Vote propagation:** compared freshest-first and oldest-first vote propagation, with freshest-first potentially improving IB delivery reliability\\n- **Extended voting period:** compared an extended voting period to a limited one in the Haskell simulation, observing minimal differences except for occasional improvements in reliable vote delivery.\\n\\n## Ongoing investigations\\n\\n- Investigating qualitative discrepancies between Haskell and Rust simulation results to determine whether they stem from differences in simulator resolution or simulation infidelities.\\n\\n## Additional resources\\n\\n- [Monthly review meeting](https://www.youtube.com/watch?v=7K6qXiVsMXg) \u2013 March 2025."},{"id":"/2025/03/17/weekly-progress-summary","metadata":{"permalink":"/news/2025/03/17/weekly-progress-summary","source":"@site/news/2025-03-17-weekly-progress-summary.md","title":"Weekly Summary \u2013 March 17, 2025","description":"This week, the Leios team made significant progress in protocol development, focusing on improving simulation capabilities and analyzing protocol behavior under various network conditions. A comparison of Haskell and Rust simulations across 18 scenarios demonstrated that the Leios protocol scales effectively to mainnet-sized networks. However, congestion occurs when the input block rate reaches 30 IB/s.","date":"2025-03-17T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.355,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 March 17, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 March 24, 2025","permalink":"/news/2025/03/24/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 March 10, 2025","permalink":"/news/2025/03/10/weekly-progress-summary"}},"content":"This week, the Leios team made significant progress in protocol development, focusing on improving simulation capabilities and analyzing protocol behavior under various network conditions. A comparison of Haskell and Rust simulations across [**18 scenarios**](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w12/analysis.ipynb) demonstrated that the Leios protocol scales effectively to mainnet-sized networks. However, congestion occurs when the input block rate reaches 30 IB/s.\\n\\n## Simulation comparison\\n\\n- Compared [**18 scenarios**](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w12/analysis.ipynb) between Haskell and Rust simulations at tag [`leios-2025w12`](https://github.com/input-output-hk/ouroboros-leios/releases/tag/leios-2025w12)\\n- Recent fixes and adjustments enabled meaningful comparison between simulations\\n- Identified differences when comparing the Haskell and Rust results, which are under active investigation.\\n\\n### Analysis of simulations\\n\\n- Completed the first simulation of Short Leios, evaluating IB production rate, IB size, and network topology\\n- Demonstrated that the Leios protocol scales effectively to mainnet-sized networks\\n- Identified congestion occurring when the input block rate exceeds 30 IB/s\\n- Suggested that allowing IBs larger than current Praos RBs may have advantages in TCP efficiency, network usage, and adapting to fluctuating transaction loads.\\n\\n| Peak CPU                                                                                                               | Mean CPU                                                                                                               |\\n|------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------|\\n| ![analysis/sims/2025w12xl/plots/cpu-peak-histogram-rust.png](https://github.com/input-output-hk/ouroboros-leios/raw/main/analysis/sims/2025w12xl/plots/cpu-peak-histogram-rust.png) | ![analysis/sims/2025w12xl/plots/cpu-mean-histogram-rust.png](https://github.com/input-output-hk/ouroboros-leios/raw/main/analysis/sims/2025w12xl/plots/cpu-mean-histogram-rust.png) |\\n\\n### Haskell simulation\\n\\n- Implemented expiration of blocks:\\n  - Blocks are removed from the relay buffer once diffusion stops and cleared from other states as specified\\n- Developed an initial Full Leios implementation:\\n  - Currently in early testing\\n  - Added the `praos-chain-quality` configuration parameter for the `\\\\eta` parameter from the specification.\\n\\n### Rust simulation\\n\\n- Developed an initial Full Leios implementation using estimated values for some parameters.\\n\\n### Formal methods\\n\\n- Short Leios trace verification: modeling local state evolution of a node \\n- Developed an initial trace verifier for Short Leios simulation traces in `leios-trace-verifier`."},{"id":"/2025/03/10/weekly-progress-summary","metadata":{"permalink":"/news/2025/03/10/weekly-progress-summary","source":"@site/news/2025-03-10-weekly-progress-summary.md","title":"Weekly Summary \u2013 March 10, 2025","description":"This week, the Leios team made significant progress in simulation capabilities, with a successful comparison of Rust and Haskell simulations across 90 scenarios. A mainnet-scale analysis of Leios on a realistic 3,000-node network revealed unexpected performance benefits from network topology. Insights from sharding performance analysis provided important optimization strategies. Finally, the team refined both simulation implementations for greater realism and comparability, while the formal methods team developed initial trace verification tools for Short Leios.","date":"2025-03-10T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":2.48,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 March 10, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 March 17, 2025","permalink":"/news/2025/03/17/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 March 3, 2025","permalink":"/news/2025/03/03/weekly-progress-summary"}},"content":"This week, the Leios team made significant progress in simulation capabilities, with a successful comparison of Rust and Haskell simulations across [**90 scenarios**](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w11/analysis.ipynb). A [**mainnet-scale analysis**](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w11xl/analysis.ipynb) of Leios on a [**realistic 3,000-node network**](https://github.com/input-output-hk/ouroboros-leios/blob/leios-2025w11/sim-rs/test_data/realistic.yaml) revealed unexpected performance benefits from network topology. Insights from [**sharding performance analysis**](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/shard-performance.ipynb) provided important optimization strategies. Finally, the team refined both simulation implementations for greater realism and comparability, while the formal methods team developed initial trace verification tools for Short Leios.\\n\\n## Simulation comparison\\n\\n- Compared [90 scenarios](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w11/analysis.ipynb) between Rust and Haskell simulations at tag [`leios-2025w11`](https://github.com/input-output-hk/ouroboros-leios/releases/tag/leios-2025w11)\\n- Recent fixes and adjustments enabled meaningful comparison between simulations\\n- Identified [issues](https://github.com/input-output-hk/ouroboros-leios/issues?q=is%3Aissue%20state%3Aopen%20label%3Aquestion) requiring further investigation.\\n\\n### Analysis of mainnet-scale simulation\\n\\n- Completed the first [analysis](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w11xl/analysis.ipynb) of Leios on a mainnet-scale network simulation using the Rust simulator\\n- Discovered that a 3,000-node mainnet-scale network transports IBs faster than an artificial 100-node network\\n- Identified \'shortcut\' edges in larger networks as a likely factor in the improved transport speed.\\n\\n![In-flight time for input blocks (IBs)](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w11xl/plots/elapsed-IB-rust.png?raw=true)\\n\\n### Performance analysis of sharding\\n\\n- Created [computational models](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/shard-performance.ipynb) to analyze the relationship between the fraction of shards without an IB and the expected number of extra IBs\\n- Evaluated performance characteristics of the simplest sharding scheme.\\n\\n![Performance analysis of simple sharding](https://github.com/input-output-hk/ouroboros-leios/raw/main/analysis/shard-performance.svg)\\n\\n## Haskell simulation\\n\\n- Fixed a bug in the relay protocol that prevented full diffusion of votes\\n- Adjusted the priority of certified EBs for inclusion in RBs\\n- Added support for an output log format that shares a common subset with the Rust simulator\\n- Analyzed TCP realism in comparison to idealized diffusion:\\n  - Discovered that higher IB rates and sizes improve diffusion times\\n  - Identified ledger state access as a significant source of latency.\\n\\n## Rust simulation\\n\\n- Expanded logs to include total IB size and parent ID of RBs\\n- Implemented the same EB selection strategy as in the Haskell simulation\\n- Added validation of IB headers before propagation to neighbors\\n- Investigating lower congestion in the Rust simulation compared to Haskell.\\n\\n## Formal methods\\n\\n- Developed the initial trace verifier for Short Leios simulation traces in `leios-trace-verifier`.\\n\\n## Research\\n\\n- Progressing on ledger design by exploring options and trade-offs\\n- Analyzing how concurrent input blocks in Leios create unique ledger-level challenges not present in Praos\\n- Evaluating approaches that balance multiple properties, including:\\n  - Conflict avoidance in the blockchain\\n  - Guaranteed fee payment for block producers\\n  - Transaction eligibility and inclusion speed\\n  - User experience regarding fee payment\\n- Investigating sharding-based solutions with various optimization strategies\\n- Planning to share more detailed findings at Leios public meeting by the end of March\\n- Targeting a comprehensive recommendation for implementors by the end of April.\\n\\n### From Short Leios to Full Leios\\n\\n- Planning the simulation roadmap for transitioning from Short Leios (currently implemented) to Full Leios\\n- Developing implementation guidelines for simulators to incorporate the pipeline referencing scheme specified in the papers\\n- Identifying key components needed to simulate the complete ledger inclusion guarantees of Full Leios."},{"id":"/2025/03/03/weekly-progress-summary","metadata":{"permalink":"/news/2025/03/03/weekly-progress-summary","source":"@site/news/2025-03-03-weekly-progress-summary.md","title":"Weekly Summary \u2013 March 3, 2025","description":"This week in Leios development, the team focused on simulation analysis, formal methods, and documentation updates. Key accomplishments include in-depth analysis of simulations at tag leios-2025w10, advancements in formal methods through a working trace verifier, and the development of technical reports.","date":"2025-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.785,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 March 3, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 March 10, 2025","permalink":"/news/2025/03/10/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 February 24, 2025","permalink":"/news/2025/02/24/weekly-progress-summary"}},"content":"This week in Leios development, the team focused on simulation analysis, formal methods, and documentation updates. Key accomplishments include in-depth analysis of simulations at tag `leios-2025w10`, advancements in formal methods through a working trace verifier, and the development of technical reports.\\n\\n## Cross-simulation analysis\\n\\n- Completed a comprehensive analysis of simulations at tag `leios-2025w10`:\\n  - Analyzed Haskell simulation performance with and without CPU usage considerations\\n  - Varying key protocol parameters:\\n    - IB production rate\\n    - IB size\\n    - Length of Leios stages\\n  - Identified the following aspects of Leios:\\n    - Delay between IB generation and receipt at nodes\\n    - Peak and mean CPU usage over time\\n    - Breakdown of CPU usage by task type\\n    - Sizes of IBs, EBs, and RBs\\n    - Duplicate IB references in EBs\\n    - Reference to EBs from RBs\\n    - Resource utilization in network traffic.\\n\\n## Protocol and formal methods\\n\\n- Began developing a trace verifier in Agda:\\n  - Implemented event trace parsing using the Haskell module `leios-trace-hs`.\\n\\n## Documentation and research\\n\\n- Completed the full draft of the [Leios technical report #1](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/technical-report-1.md)\\n- Created a skeletal [draft of the Leios CIP](https://github.com/input-output-hk/ouroboros-leios/blob/main/docs/leios-cip-draft.md)\\n- Aligned with the latest CIP template\\n- Developed a [detailed simulation analysis ](https://github.com/input-output-hk/ouroboros-leios/blob/main/analysis/sims/2025w10/analysis.ipynb) for the 100-node Leios network.\\n\\n## Programming and testing\\n\\n- Resolved several simulation issues:\\n  - [#235: RB size does not reflect the presence of a certificate](https://github.com/input-output-hk/ouroboros-leios/issues/235)\\n  - [#234: Fast transmission of large blocks at moderate IB rate](https://github.com/input-output-hk/ouroboros-leios/issues/234)\\n  - [#232: Monotonicity of EB inclusion in RBs](https://github.com/input-output-hk/ouroboros-leios/issues/232)\\n  - [#230: EBs are not large enough to include their IBs](https://github.com/input-output-hk/ouroboros-leios/issues/230)\\n  - [#229: Rust simulations panics from overflow](https://github.com/input-output-hk/ouroboros-leios/issues/229)\\n- Enabled the visualization of network traffic and logging messages for multiple predefined \'scenarios\' instead of a single hard-coded trace\\n- Updated the visualization to display resource utilization in network traffic.\\n\\n## Rust simulation visualization\\n\\n- Improved visualization capabilities:\\n  - Added support for multiple predefined \'scenarios\' instead of single hard-coded trace\\n  - Moved the visualization logic to the client-side web worker for better performance\\n  - Added the visualization of per-node network traffic breakdown by message type\\n- Fixed critical simulation bugs:\\n  - Resolved issue [#229](https://github.com/input-output-hk/ouroboros-leios/issues/229) causing time travel and crashes in high-traffic high-latency scenarios."},{"id":"/2025/02/24/weekly-progress-summary","metadata":{"permalink":"/news/2025/02/24/weekly-progress-summary","source":"@site/news/2025-02-24-weekly-progress-summary.md","title":"Weekly Summary \u2013 February 24, 2025","description":"This week in Leios development, the team focused on simulation analysis and formal methods. Key accomplishments include detailed analyses of both Haskell and Rust simulations, initial work on a protocol dashboard, and advancements in formal methods through trace verification in Agda.","date":"2025-02-24T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 February 24, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 March 3, 2025","permalink":"/news/2025/03/03/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 February 17, 2025","permalink":"/news/2025/02/17/weekly-progress-summary"}},"content":"This week in Leios development, the team focused on simulation analysis and formal methods. Key accomplishments include detailed analyses of both Haskell and Rust simulations, initial work on a protocol dashboard, and advancements in formal methods through trace verification in Agda.\\n\\n## Cross-simulation analysis\\n\\n- Completed a comprehensive analysis of simulations at tag `leios-2025w09`:\\n  - Refactored the ELT workflow to improve simulation data processing\\n  - Modified the Rust simulator to generate fixed-size input blocks (IBs) for comparison with Haskell\\n  - Partially resolved discrepancies in congestion metrics between simulators\\n  - Developed detailed analyses of:\\n    - IB generation to receipt elapsed time\\n    - Time-in-flight over node-to-node links\\n  - Identified the dual role of network bandwidth and CPU bottlenecks in high throughput congestion.\\n\\n## Protocol dashboard initiative\\n\\n- Initiated the design of an interactive protocol dashboard with planned features:\\n  - Protocol parameter configuration\\n  - Stake distribution settings\\n  - Performance visualization:\\n    - Block arrival efficiency\\n    - Transaction duplication\\n    - Leios operation rewards\\n    - Resource utilization\\n  - Security metrics visualization:\\n    - Quorum failure analysis\\n    - Certificate forgery detection\\n    - Adversarial block tracking.\\n\\n## Rust simulation\\n\\n- Enhanced parallel message handling capabilities:\\n  - Implemented parallel mini-protocol message transmission\\n  - Added even bandwidth distribution between mini-protocols\\n  - Introduced the `simulate-transactions` configuration option\\n  - Updated simulation output for better Haskell compatibility\\n  - Improved block visualization for scenarios with high IB counts.\\n\\n## Formal methods\\n\\n- Commenced trace verifier development in Agda:\\n  - Added decidability to Short Leios protocol relational specification\\n  - Implemented a proof-by-computation approach for execution traces\\n  - Applied the successful methodology from Streamlet formalization."},{"id":"/2025/02/17/weekly-progress-summary","metadata":{"permalink":"/news/2025/02/17/weekly-progress-summary","source":"@site/news/2025-02-17-weekly-progress-summary.md","title":"Weekly Summary \u2013 February 17, 2025","description":"This week in Leios development, CPS-0018 for transaction throughput was approved, along with improved Docker support for simulations and analysis of cross-simulation results. The team also examined input block (IB) production rates and their impact on network performance.","date":"2025-02-17T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.855,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 February 17, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 February 24, 2025","permalink":"/news/2025/02/24/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 February 10, 2025","permalink":"/news/2025/02/10/weekly-progress-summary"}},"content":"This week in Leios development, [CPS-0018](https://github.com/cardano-foundation/CIPs/blob/master/CPS-0018/README.md) for transaction throughput was approved, along with improved Docker support for simulations and analysis of cross-simulation results. The team also examined input block (IB) production rates and their impact on network performance.\\n\\n## Protocol development\\n\\n- CPS-0018 \'Greater transaction throughput\' officially approved:\\n  - Merged into Cardano Foundation\'s CIP/CPS repository\\n  - Documents urgency of higher transaction throughput\\n  - Defines goals for the Leios initiative\\n  - Identifies key open questions and use cases.\\n\\n## Cross-simulation analysis\\n\\n- Conducted a comprehensive [analysis](https://github.com/input-output-hk/ouroboros-leios/blob/main/Logbook.md#simulation-of-varied-ib-production-rate) of IB production rates ranging from 1 IB/s to 100 IB/s:\\n  - Developed an ELT workflow for data processing via MongoDB\\n  - Created an R Jupyter notebook for analysis and visualization\\n  - Identified and addressed three significant bugs ([#207](https://github.com/input-output-hk/ouroboros-leios/issues/207), [#208](https://github.com/input-output-hk/ouroboros-leios/issues/208), [#209](https://github.com/input-output-hk/ouroboros-leios/issues/209))\\n- Key findings from the Haskell simulation:\\n  - Network congestion emerges at high IB production rates\\n  - Both average propagation time and slow propagation tail increase\\n  - A critical threshold of ~40 IBs/s was identified, beyond which network congestion severely impacts block reception\\n- Comparison of PeerNet and Haskell simulations:\\n  - Both exhibit qualitatively similar block propagation distributions\\n  - Both demonstrate protocol breakdown under high block production rates\\n  - Differences in resolution and configuration prevent exact comparison.\\n\\n## Infrastructure improvements\\n\\n- Added comprehensive Docker support for both simulations:\\n  - Optimized multi-stage Docker files for Haskell and Rust\\n  - Simplified deployment process\\n  - Enabled easy configuration via volume mounts and parameters\\n  - Documented usage in README.md.\\n\\n## Rust simulation\\n\\n- Enhanced Rust simulation capabilities:\\n  - Implemented bandwidth usage tracking\\n  - Added configurable bandwidth limits per connection\\n  - Fixed issues identified in cross-simulation comparisons\\n  - Started updating visualizations for improved clarity.\\n\\n## Haskell simulation\\n\\n- Enhanced IB sortition handling for IB/slot < 1\\n- Began integrating block expiration and diffusion-halt proposal\\n- Implemented ideal timing calculations for diffusion:\\n  - Added uniform block behavior configuration\\n  - Identified relay mini-protocol complexities:\\n    - Variable latency (3-4) for block transfer\\n    - Latency depends on traffic conditions and request handling.\\n\\n## Formal methods\\n\\n- Moved formal specification to a [dedicated repository](https://github.com/input-output-hk/ouroboros-leios-formal-spec)\\n- Established a conformance testing framework:\\n  - Enabled testing between Short Leios implementations\\n  - Documented the test suite execution process\\n- Initiated a survey of network models across IO consensus projects."},{"id":"/2025/02/10/weekly-progress-summary","metadata":{"permalink":"/news/2025/02/10/weekly-progress-summary","source":"@site/news/2025-02-10-weekly-progress-summary.md","title":"Weekly Summary \u2013 February 10, 2025","description":"This week, the Leios team made significant progress across multiple areas. Major developments included detailed DeltaQ analysis of network topologies, extensive BLS cryptography benchmarking, and improvements to both simulations. The team also explored succinct schemes for BLS key registration and conducted a detailed certificate performance analysis. Both Haskell and Rust simulations received substantial updates to improve visualization and support more realistic testing conditions.","date":"2025-02-10T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":2.145,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 February 10, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 February 17, 2025","permalink":"/news/2025/02/17/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 February 3, 2025","permalink":"/news/2025/02/03/weekly-progress-summary"}},"content":"This week, the Leios team made significant progress across multiple areas. Major developments included detailed DeltaQ analysis of network topologies, extensive BLS cryptography benchmarking, and improvements to both simulations. The team also explored succinct schemes for BLS key registration and conducted a detailed certificate performance analysis. Both Haskell and Rust simulations received substantial updates to improve visualization and support more realistic testing conditions.\\n\\n## DeltaQ analysis\\n\\n- Enhanced the `topology-checker` with \u0394QSD analysis capabilities:\\n  - Extracts inter-node latencies from given topologies\\n  - Classifies latencies into near/far components\\n  - Builds parameterized \u0394Q models\\n  - Outputs fitted models in `delta_q` web app syntax\\n- Key findings from topology analysis:\\n  - Clear distinction between near/far components in examined topologies\\n  - Unexpectedly high hop counts in latency-weighted Dijkstra paths:\\n    - Min 4-5, max 8 for topology - 100\\n    - Min 8, max 20 for \'realistic\' topology\\n  - Model fitting achieved rough shape matching but showed significant deviations at low latencies\\n  - Resource usage tracking goals remain unmet due to complexity in understanding load multiplication factors.\\n  \\n## BLS cryptography\\n\\n- Completed comprehensive benchmarking of certificate operations:\\n  - Detailed performance analysis across committee sizes (500-1000 seats)\\n  - Certificate generation: 63.4ms - 92.5ms\\n  - Certificate verification: 104.8ms - 144.9ms\\n  - Certificate weighing: ~12ms consistently\\n- Explored succinct schemes for key registration:\\n  - Proposed 90-day key evolution with 124-byte KZG commitments\\n  - Analyzed message sizes for key opening (316 bytes per pool)\\n  - Investigated SNARK-based alternatives for proof of possession\\n- Added BLS crypto to the CI pipeline with automated testing\\n- Documented parallelization strategies for certificate operations.\\n\\n## Formal methods\\n\\n- Added a conformance testing client for the executable Short Leios specification\\n- Successfully merged the executable specification for Simplified Leios into main.\\n\\n## Haskell simulation\\n\\n- Updated configuration defaults for block sizes and timings\\n- Added support for idealized simulation conditions:\\n  - Single-peer block body requests\\n  - TCP congestion window modeling\\n  - Mini-protocol multiplexing\\n  - Unlimited bandwidth links support\\n- Enhanced simulation output and analysis:\\n  - Added raw field for accumulated data\\n  - Implemented block diffusion CDF extraction\\n  - Created multi-CDF plotting capabilities.\\n\\n## Rust simulation\\n\\n- Enhanced visualization capabilities:\\n  - Added block size breakdown display\\n  - Implemented total bytes sent/received tracking\\n  - Added total TX count and CPU time metrics\\n- Improved event handling:\\n  - Updated to standard timestamp format (seconds)\\n  - Enhanced CPU task event structure\\n  - Added CBOR output support\\n- Added support for multiple strategies:\\n  - Implemented `ib-diffusion-strategy` (freshest-first, oldest-first, peer-order)\\n  - Added `relay-strategy` affecting TXs, IBs, EBs, votes, and RBs\\n  - Enabled unlimited EB and vote bundle downloads from peers."},{"id":"/2025/02/03/weekly-progress-summary","metadata":{"permalink":"/news/2025/02/03/weekly-progress-summary","source":"@site/news/2025-02-03-weekly-progress-summary.md","title":"Weekly Summary \u2013 February 3, 2025","description":"This week, the Leios team worked on cryptography benchmarking and cost calculator improvements. The team completed a reference implementation for Leios cryptography and enhanced the online cost calculator with user-requested features. They also updated both Haskell and Rust simulations to improve visualization and network modeling capabilities.","date":"2025-02-03T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.705,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 February 3, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 February 10, 2025","permalink":"/news/2025/02/10/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 January 27, 2025","permalink":"/news/2025/01/27/weekly-progress-summary"}},"content":"This week, the Leios team worked on cryptography benchmarking and cost calculator improvements. The team completed a reference implementation for Leios cryptography and enhanced the online cost calculator with user-requested features. They also updated both Haskell and Rust simulations to improve visualization and network modeling capabilities.\\n\\n## Haskell simulation\\n\\n- Added support for `Send` and `Receive` voting stages, providing:\\n  - A new `leios-vote-send-recv-stages` configuration option\\n  - A configurable stage length via `leios-stage-active-voting-slots`\\n- Implemented multiple diffusion strategies:\\n  - Added oldest-first strategy\\n  - Added configurable strategies for IBs, EBs, and votes via `*-diffusion-strategy`\\n    configurations\\n- Created a new `small` scenario for 100 nodes with 2,000 kB links\\n  - Tuned IB parameters to utilize one-third of link capacity\\n  - Added configurations for both `single-stage` and `send-recv` voting\\n- Fixed several simulation behaviors:\\n  - Improved block generation logic\\n  - Prevented duplicate EB inclusion in the base chain\\n  - Confirmed proper EB inclusion timing relative to vote diffusion\\n- The main difference observed between `single-stage` and `send-recv` is that the former\\n  shows a longer tail in the CPU usage CDF when the simulation is run with unlimited\\n  cores.\\n\\n## Cryptography implementation\\n\\nThe Rust benchmarks for Leios cryptography were redesigned as a reference\\nimplementation:\\n\\n- Implemented the Fait Accompli sortition\\n- Enhanced sortition to use rational arithmetic instead of quad-precision floats\\n- Added Quickcheck tests for all capabilities\\n- Added benchmarks for serialization\\n- Optimized vote and certificate size.\\n\\n## Cost calculator improvements\\n\\nThe team enhanced the\\n[online Leios cost calculator](https://leios.cardano-scaling.org/cost-estimator/):\\n\\n- Added support for both hyperscale and discount cloud providers\\n- Made discount providers the default option\\n- Added option to amortize storage costs perpetually\\n- Updated defaults:\\n  - Single relay deployment\\n  - More conservative 50% disk compression\\n  - Perpetual storage cost amortization.\\n\\n## Throughput simulator\\n\\nThe team updated the\\n[Cardano throughput simulator](https://www.insightmaker.com/insight/4DU4kmFVCFDaq30ux29PCe/Cardano-Throughput-v0-3)\\nwith:\\n\\n- The latest cloud-computing cost model\\n- Synchronized assumptions with an online cost calculator.\\n\\n## Rust simulation\\n\\n- Made minor fixes to the new graph generation strategy\\n- Planned out a roadmap for visualization work focusing on the Leios transaction\\n  lifecycle."},{"id":"/2025/01/27/weekly-progress-summary","metadata":{"permalink":"/news/2025/01/27/weekly-progress-summary","source":"@site/news/2025-01-27-weekly-progress-summary.md","title":"Weekly Summary \u2013 January 27, 2025","description":"The Leios team continued refining Haskell and Rust simulations, standardizing inputs, outputs, and event logging for better comparability. The team defined standard formats for configuration parameters and network topology for running the Leios protocol. They also worked on logging identical simulation events to compare and feed them into the DeltaQ model and, consequently, the executable specification, ensuring alignment with formal methods.","date":"2025-01-27T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 January 27, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 February 3, 2025","permalink":"/news/2025/02/03/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 January 20, 2025","permalink":"/news/2025/01/20/weekly-progress-summary"}},"content":"The Leios team continued refining Haskell and Rust simulations, standardizing inputs, outputs, and event logging for better comparability. The team defined standard formats [for configuration parameters](https://github.com/input-output-hk/ouroboros-leios/blob/main/data/simulation/config.schema.json) and [network topology](https://github.com/input-output-hk/ouroboros-leios/blob/main/data/simulation/topology.d.ts) for running the Leios protocol. They also worked on logging identical simulation events to compare and feed them into the DeltaQ model and, consequently, the executable specification, ensuring alignment with formal methods.\\n\\n## Haskell simulation updates\\n\\n- The `short-leios` simulation now outputs diffusion latency data\\n- Added support for different input block (IB) diffusion strategies:\\n  - freshest-first: higher slot numbers requested first\\n  - peer-order: requested in order of peer announcement\\n- Added support for `Vote (Send)` and `Vote (Recv)` stages.\\n\\n## Rust simulation progress\\n\\n- Added an \'organic\' topology generator that better matches mainnet topology\\n- The generator creates clusters of colocated stake pools and relays\\n- The simulation uses stake to determine relay connectivity\\n- Topology insights gathered from stake pool owners:\\n  - Most pools have multiple relays (2,312 relays across 1,278 pools)\\n  - Pool operators often run multiple colocated pools sharing relays\\n  - Relays typically maintain ~25 active outgoing connections\\n  - Incoming connections scale with stake weight (10-400+ connections).\\n\\n## DeltaQ update\\n\\n- Wrote a comprehensive [2025-01 report](https://github.com/input-output-hk/ouroboros-leios/blob/main/delta_q/docs/Report%202025-01.md) covering work since September 2024.\\n\\n## Formal methods\\n\\n- Finalizing executable specifications for *simplified* and *short* Leios\\n- Extracted *short* Leios specification to Haskell for conformance testing."},{"id":"/2025/01/20/weekly-progress-summary","metadata":{"permalink":"/news/2025/01/20/weekly-progress-summary","source":"@site/news/2025-01-20-weekly-progress-summary.md","title":"Weekly Summary \u2013 January 20, 2025","description":"Simulation progress","date":"2025-01-20T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.54,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 January 20, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 January 27, 2025","permalink":"/news/2025/01/27/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 January 13, 2025","permalink":"/news/2025/01/13/weekly-progress-summary"}},"content":"## Simulation progress\\n\\n### Haskell implementation\\n\\n- Enhanced parameter handling with support for reading configurations and\\n  topologies from disk\\n- Added a new `generate-topology` command for random topology generation\\n- Aligned Leios sortition with algorithms from sortition benchmarks and the\\n  technical report\\n- Completed analysis comparing the Praos simulation with the benchmark cluster\\n  - Adoption times within 10% of measured values\\n  - Review of simulation parameters pending\\n- Next steps identified:\\n  - Generate topologies with block producers behind relays\\n  - Begin comparison with the idealized diffusion model\\n  - Configure and run simulations for higher throughput.\\n\\n### Rust implementation\\n\\n- Completed the first pass of block-level visualization\\n- Updated topology files to include baked-in latencies\\n- Improved output with human-readable names from the shared topology format\\n- Enhanced simulation output comparability across different simulations.\\n\\n## Analysis and research\\n\\n### Sortition analysis\\n\\n- Completed a detailed analysis of the \'Fiat Accompli\' sortition scheme using mainnet\\n  stake distribution (Epoch 535)\\n- Key findings for 500-vote committees:\\n  - 406 largest stake block-producers would be deterministic voters\\n  - ~88 voters would be randomly selected\\n  - Significant certificate size reduction achieved through deterministic voter\\n    selection.\\n\\n### Downstream impact assessment\\n\\nStarted comprehensive analysis of Leios\'s impact on the ecosystem:\\n\\n- Identified impacts on indexers, explorers, SDKs, and APIs resulting from ledger and\\n  node changes\\n- Transaction construction and memory-pool sharding effects on DApps and wallets\\n- Physical layer visibility considerations for sophisticated use cases\\n- High throughput implications for event filtering efficiency\\n- Transaction journey time considerations from memory pool to Praos block\\n  reference.\\n\\n### DeltaQ analysis\\n\\n- Successfully matched \u0394Q model for IB diffusion across both simulations and\\n  implementations\\n- Identified key differences in simulation approaches:\\n  - Haskell simulation includes bandwidth effects (328ms network delay per hop\\n    at 1MB/s)\\n  - Rust simulation currently excludes bandwidth effects\\n- Enabled cross-simulation topology sharing for consistent testing."},{"id":"/2025/01/13/weekly-progress-summary","metadata":{"permalink":"/news/2025/01/13/weekly-progress-summary","source":"@site/news/2025-01-13-weekly-progress-summary.md","title":"Weekly Summary \u2013 January 13, 2025","description":"Cryptography benchmarks","date":"2025-01-13T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 January 13, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 January 20, 2025","permalink":"/news/2025/01/20/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 January 6, 2025","permalink":"/news/2025/01/06/weekly-progress-summary"}},"content":"## Cryptography benchmarks\\n\\n- Implemented and benchmarked the complete Leios cryptography suite in the\\n  `leios_crypto_benchmarks` Rust crate\\n- Key VRF performance metrics:\\n  - Proving: 240 \xb5s\\n  - Verifying: 390 \xb5s\\n- Sortition performance (excluding VRF):\\n  - Leadership checks (RB/IB/EB): 0.17 \xb5s per slot/pipeline\\n  - Vote number calculation: 3.8 \xb5s per pipeline\\n- BLS operations benchmarked:\\n  - Key possession proof verification: 1.5 ms per key\\n  - Vote generation/verification: 280 \xb5s / 1.4 ms per vote\\n  - Certificate operations (300-vote quorum): 50 ms generation, 90 ms\\n    verification.\\n\\n## Cryptography design progress\\n\\n- Optimized vote signature size to potentially as small as 192 bytes\\n- Determined that 500-vote committee certificates (60% quorum) would fit within\\n  Praos blocks at ~58 kB\\n- Explored potential synergies with KES rotation and Praos VRF BLS keys\\n- Completed cryptography sections for the first technical report\\n- Decision made to freeze current report content and move new findings to future\\n  documents.\\n\\n## Simulation development\\n\\n### Haskell simulation\\n\\n- Achieved diffusion latency comparable to benchmark cluster data for Praos\\n  blocks\\n- Integrated agreed-upon simulation parameters with the Rust team\\n- Added event log output functionality with JSON support\\n- Implemented \'short-leios\' simulation variant matching mainnet ranking block\\n  interval\\n- Fixed coordination issues in Relay mini-protocol consumers\\n- Completed the PI goal by adding total data transmitted per node visualization.\\n\\n### Rust simulation\\n\\n- Implemented more granular CPU simulation times\\n- Fixed race condition in the simulated clock\\n- Started consuming a new shared configuration file format\\n- Established a shared configuration format with default parameters in\\n  `data/simulation/default.yaml`."},{"id":"/2025/01/06/weekly-progress-summary","metadata":{"permalink":"/news/2025/01/06/weekly-progress-summary","source":"@site/news/2025-01-06-weekly-progress-summary.md","title":"Weekly Summary \u2013 January 6, 2025","description":"Rust simulation","date":"2025-01-06T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":1.165,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 January 6, 2025","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 January 13, 2025","permalink":"/news/2025/01/13/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 December 30, 2024","permalink":"/news/2024/12/30/weekly-progress-summary"}},"content":"## Rust simulation\\n\\n- Added a basic simulation of central processing unit (CPU) usage/latency\\n- Implemented \'lottery won\' events to identify the start of CPU processing\\n- Configured each node with four simulated cores, adjustable per node\\n- Transaction validation and ranking block/input block/endorser block generation/validation each take one CPU task\\n- All virtual CPU costs were copied from the cost estimator.\\n\\n## DeltaQ summary update\\n\\n- Added MIN/MAX combinators for best- and worst-case simulation results\\n- The Rust simulation best case does not match the analytically best behavior\\n- The Haskell simulation best case is too fast; the \u0394Q expression must assume more than 200 peers per node.\\n\\n## Cost dashboard updates\\n\\n- Improved input parameters and computations\\n- Lengthened phases and reduced endorser block rate\\n- Updated CPU costs for votes and certificates\\n- Revised input/output operations per second (IOPS) values based on empirical data from Cardano nodes.\\n\\n## Benchmarking BLS signatures\\n\\n- Benchmarked BLS votes using the Rust `bls-signatures` package\\n- Aggregate verification significantly speeds up the process\\n- Provided CPU time estimates for various operations.\\n\\n## Votes and certificates\\n\\n- Updated size estimates for votes\\n- Added CPU time estimates for BLS votes and certificates\\n- Drafted technical report sections on BLS and MUSEN certificates.\\n\\n## Sortition analysis\\n\\n- Analyzed sortition for input and endorser blocks and votes\\n- Added findings to the draft of the first technical report."},{"id":"/2024/12/30/weekly-progress-summary","metadata":{"permalink":"/news/2024/12/30/weekly-progress-summary","source":"@site/news/2024-12-30-weekly-progress-summary.md","title":"Weekly Summary \u2013 December 30, 2024","description":"Rust simulation","date":"2024-12-30T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 December 30, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 January 6, 2025","permalink":"/news/2025/01/06/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 December 23, 2024","permalink":"/news/2024/12/23/weekly-progress-summary"}},"content":"## Rust simulation\\n\\n- Abandoned Waxman graph generation favoring a more straightforward distance-weighted approach to better control graph connectivity.\\n\\n## Haskell simulation\\n\\n- Added support for bounded and unbounded parallelism to the Leios node\\n- Fixed relay protocol messages to ensure ordered delivery\\n- Next steps include loading protocol configuration from disk and investigating\\n  endorser block (EB) inclusion rates.\\n\\n## Revised analysis of votes and certificates\\n\\n- Continued research on cryptographic options for Leios votes and certificates\\n- BLS was identified as the most viable option.\\n\\n## Jupyter support for DeltaQ\\n\\n- Introduced new high-performance Haskell packages for DeltaQ with comprehensive\\n  test suites."},{"id":"/2024/12/23/weekly-progress-summary","metadata":{"permalink":"/news/2024/12/23/weekly-progress-summary","source":"@site/news/2024-12-23-weekly-progress-summary.md","title":"Weekly Summary \u2013 December 23, 2024","description":"GitHub actions","date":"2024-12-23T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.32,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 December 23, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 December 30, 2024","permalink":"/news/2024/12/30/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 December 16, 2024","permalink":"/news/2024/12/16/weekly-progress-summary"}},"content":"## GitHub actions\\n\\n- Organized continuous integration (CI) configuration with namespace prefixes for better project sorting.\\n\\n## Rust simulation\\n\\n- Began visualizing transaction throughput\\n- Tweaked configuration settings to maximize throughput.\\n\\n## Haskell simulation\\n\\n- Merged code for running Praos and Leios visualizations\\n- Added HLint integration for consistent module imports.\\n\\n## Public meeting on December 28, 2024\\n\\n- [Meeting recording](https://drive.google.com/file/d/1F07oKxBgdOEasGcstxEavkPCgr58sbIO/view?usp=sharing)\\n- [Meeting slides](https://docs.google.com/presentation/d/1LwpcXnXLgrYTSDalJY1SfpeyU_4lIkYhyMy5Kv0Huzw/edit?usp=sharing)."},{"id":"/2024/12/16/weekly-progress-summary","metadata":{"permalink":"/news/2024/12/16/weekly-progress-summary","source":"@site/news/2024-12-16-weekly-progress-summary.md","title":"Weekly Summary \u2013 December 16, 2024","description":"Rust simulation","date":"2024-12-16T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.35,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 December 16, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 December 23, 2024","permalink":"/news/2024/12/23/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary \u2013 December 9, 2024","permalink":"/news/2024/12/09/weekly-progress-summary"}},"content":"## Rust simulation\\n\\n- Optimized virtual clock to be lock-free, removing contention from the previous\\n  implementation.\\n\\n## Haskell simulation\\n\\n- Merged Leios visualizations on `main`\\n- Improved peer-to-peer (P2P) visualization with block type differentiation and latency\\n  charting.\\n\\n## Analysis of vote size and ALBA certificates\\n\\n- Estimated minimum possible size for votes using ephemeral keys or key evolving signatures (KES)\\n- Benchmarked central processing unit (CPU) time for ALBA certificates."},{"id":"/2024/12/09/weekly-progress-summary","metadata":{"permalink":"/news/2024/12/09/weekly-progress-summary","source":"@site/news/2024-12-09-weekly-progress-summary.md","title":"Weekly Summary \u2013 December 9, 2024","description":"Node discussions with IOG site reliability engineering","date":"2024-12-09T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.37,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary \u2013 December 9, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 December 16, 2024","permalink":"/news/2024/12/16/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - December 2, 2024","permalink":"/news/2024/12/02/weekly-progress-summary"}},"content":"## Node discussions with IOG site reliability engineering\\n\\n- Discussed the cloud engineering aspects of Cardano node deployments relevant to Leios\\n- Received recommendations for updating the cost calculator with predefined cost defaults.\\n\\n## Threat model analysis\\n\\n- Drafted a section on the Leios threat model analysis, detailing 25 hypothetical threats\\n- Discussed potential impacts and mitigations.\\n\\n## Rust simulation\\n\\n- Generated new test data set to match the geographical distribution of mainnet\\n  nodes."},{"id":"/2024/12/02/weekly-progress-summary","metadata":{"permalink":"/news/2024/12/02/weekly-progress-summary","source":"@site/news/2024-12-02-weekly-progress-summary.md","title":"Weekly Summary - December 2, 2024","description":"Nix Development Environment","date":"2024-12-02T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.33,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - December 2, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary \u2013 December 9, 2024","permalink":"/news/2024/12/09/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - November 25, 2024","permalink":"/news/2024/11/25/weekly-progress-summary"}},"content":"## Nix Development Environment\\n\\n- Created a separate repository for a `nix develop` environment with the correct\\n  Haskell compiler and dependencies.\\n\\n## Rust Simulation\\n\\n- Developed a fully virtual clock to decouple simulation performance from wall\\n  clock time.\\n\\n## \u0394Q Model\\n\\n- Created \u0394Q models for transaction diffusion in Rust and Praos block diffusion\\n  in Haskell simulations.\\n- Identified discrepancies between simulation behavior and \u0394Q expressions."},{"id":"/2024/11/25/weekly-progress-summary","metadata":{"permalink":"/news/2024/11/25/weekly-progress-summary","source":"@site/news/2024-11-25-weekly-progress-summary.md","title":"Weekly Summary - November 25, 2024","description":"Visualizing Node Behavior","date":"2024-11-25T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - November 25, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - December 2, 2024","permalink":"/news/2024/12/02/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - November 18, 2024","permalink":"/news/2024/11/18/weekly-progress-summary"}},"content":"## Visualizing Node Behavior\\n\\n- Added a web server to render throughput of IBs and EBs in the Leios\\n  simulation.\\n- Utilized `Tracer` interface for JSON-formatted traces and live graph plotting.\\n\\n## Discussion with Nicolas\\n\\n- Explored Leios protocol with a focus on IB to EB construction.\\n- Modeled a single node with input and output queues for IBs and EBs.\\n\\n## Meeting with Research\\n\\n- Discussed ongoing research work and networking challenges.\\n- Aimed to define a \u0394Q model for Leios and explore protocol structure.\\n\\n## Public Meeting on November 27, 2024\\n\\n- [Meeting Recording](https://drive.google.com/file/d/1W4iu4MwOXILXes1Zi43MeM505KAOHXso/view?usp=sharing)\\n- [Meeting Slides](https://docs.google.com/presentation/d/11LHQeUuv-TQfiy9GwXkrffSimFjSq8tdTB8qIB-Pk3U/edit?usp=sharing)"},{"id":"/2024/11/18/weekly-progress-summary","metadata":{"permalink":"/news/2024/11/18/weekly-progress-summary","source":"@site/news/2024-11-18-weekly-progress-summary.md","title":"Weekly Summary - November 18, 2024","description":"Structuring Repository for Open-source","date":"2024-11-18T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - November 18, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - November 25, 2024","permalink":"/news/2024/11/25/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - November 11, 2024","permalink":"/news/2024/11/11/weekly-progress-summary"}},"content":"## Structuring Repository for Open-source\\n\\n- Added basic instructions for Code of Conduct, Contribution guidelines, and\\n  coding standards.\\n- Restructured code to merge `leios` and `leios-sim` packages.\\n\\n## Designing Test Environment\\n\\n- Sketched ideas for exploring Leios behavior with respect to networking.\\n\\n## Leios Meeting\\n\\n- Discussed network simulation and \u0394Q model of the pipeline.\\n- Gathered numbers on network latency and throughput."},{"id":"/2024/11/11/weekly-progress-summary","metadata":{"permalink":"/news/2024/11/11/weekly-progress-summary","source":"@site/news/2024-11-11-weekly-progress-summary.md","title":"Weekly Summary - November 11, 2024","description":"Network Simulation for Leios","date":"2024-11-11T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - November 11, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - November 18, 2024","permalink":"/news/2024/11/18/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - November 4, 2024","permalink":"/news/2024/11/04/weekly-progress-summary"}},"content":"## Network Simulation for Leios\\n\\n- Discussed early simulations for Leios with researchers.\\n- Simulated block diffusion with bandwidth constraints.\\n- Modeled block propagation among nodes and observed variations in diffusion\\n  time.\\n\\n## Team Meeting\\n\\n- Explored potential use cases for \\"Blob Leios\\" in governance and auctions.\\n- Discussed incentives for SPOs to serve data and compared with Filecoin.\\n\\n## Presentation by Sandro\\n\\n- Sandro provided an introductory talk on Leios, explaining protocol decisions.\\n- Recording available for team review."},{"id":"/2024/11/04/weekly-progress-summary","metadata":{"permalink":"/news/2024/11/04/weekly-progress-summary","source":"@site/news/2024-11-04-weekly-progress-summary.md","title":"Weekly Summary - November 4, 2024","description":"Weekly Meeting","date":"2024-11-04T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.435,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - November 4, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - November 11, 2024","permalink":"/news/2024/11/11/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - October 28, 2024","permalink":"/news/2024/10/28/weekly-progress-summary"}},"content":"## Weekly Meeting\\n\\n- Discussed Ethereum\'s blob approach and its relevance to Leios.\\n- Considered Leios for storing unstructured, transient data.\\n- Identified potential use cases and next steps for protocol modeling.\\n\\n## Meeting with Spyros\\n\\n- Spyros worked on network simulation for Leios using Peernet.\\n- Focused on bandwidth as a limiting factor and explored block generation\\n  frequency limits.\\n\\n## Structuring Repository for Open-source\\n\\n- Added basic instructions for Code of Conduct, Contribution guidelines, and\\n  coding standards.\\n- Restructured code to merge `leios` and `leios-sim` packages."},{"id":"/2024/10/28/weekly-progress-summary","metadata":{"permalink":"/news/2024/10/28/weekly-progress-summary","source":"@site/news/2024-10-28-weekly-progress-summary.md","title":"Weekly Summary - October 28, 2024","description":"Visualizing Node Behavior","date":"2024-10-28T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.5,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - October 28, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - November 4, 2024","permalink":"/news/2024/11/04/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - October 21, 2024","permalink":"/news/2024/10/21/weekly-progress-summary"}},"content":"## Visualizing Node Behavior\\n\\n- Added a simple web server to render the throughput of IBs and EBs in the Leios\\n  simulation.\\n- Utilized the `Tracer` interface for JSON-formatted traces and live graph\\n  plotting.\\n\\n## Discussion with Nicolas\\n\\n- Explored Leios protocol with a focus on IB to EB construction.\\n- Modeled a single node with input and output queues for IBs and EBs.\\n\\n## Meeting with Research\\n\\n- Discussed ongoing research work and networking challenges.\\n- Aimed to define a \u0394Q model for Leios and explore protocol structure.\\n\\n## Public Meeting on October 31, 2024\\n\\n- [Recording](https://drive.google.com/file/d/12VE0__S0knHqXXpIVdXGWvDipK0g89p_/view?usp=sharing)\\n- [Slides](https://docs.google.com/presentation/d/1KgjJyP6yZyZKCGum3deoIyooYUOretA9W6dTtXv1fso/edit?usp=sharing)"},{"id":"/2024/10/21/weekly-progress-summary","metadata":{"permalink":"/news/2024/10/21/weekly-progress-summary","source":"@site/news/2024-10-21-weekly-progress-summary.md","title":"Weekly Summary - October 21, 2024","description":"Designing Test Environment","date":"2024-10-21T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - October 21, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - October 28, 2024","permalink":"/news/2024/10/28/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - October 14, 2024","permalink":"/news/2024/10/14/weekly-progress-summary"}},"content":"## Designing Test Environment\\n\\n- Sketched ideas for exploring Leios behavior with respect to networking.\\n- Developed a high-level design for network simulation.\\n\\n## Leios Meeting\\n\\n- Discussed network simulation and \u0394Q model of the pipeline.\\n- Gathered numbers on network latency and throughput.\\n\\n## Structuring Repository for Open-source\\n\\n- Added basic instructions for Code of Conduct, Contribution guidelines, and\\n  coding standards.\\n- Restructured code to merge `leios` and `leios-sim` packages."},{"id":"/2024/10/14/weekly-progress-summary","metadata":{"permalink":"/news/2024/10/14/weekly-progress-summary","source":"@site/news/2024-10-14-weekly-progress-summary.md","title":"Weekly Summary - October 14, 2024","description":"Network Simulation for Leios","date":"2024-10-14T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.4,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - October 14, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - October 21, 2024","permalink":"/news/2024/10/21/weekly-progress-summary"},"nextItem":{"title":"Weekly Summary - October 7, 2024","permalink":"/news/2024/10/07/weekly-progress-summary"}},"content":"## Network Simulation for Leios\\n\\n- Discussed early simulations for Leios with researchers.\\n- Simulated block diffusion with bandwidth constraints.\\n- Modeled block propagation among nodes and observed variations in diffusion\\n  time.\\n\\n## Team Meeting\\n\\n- Explored potential use cases for \\"Blob Leios\\" in governance and auctions.\\n- Discussed incentives for SPOs to serve data and compared with Filecoin.\\n\\n## Presentation by Sandro\\n\\n- Sandro provided an introductory talk on Leios, explaining protocol decisions.\\n- Recording available for team review."},{"id":"/2024/10/07/weekly-progress-summary","metadata":{"permalink":"/news/2024/10/07/weekly-progress-summary","source":"@site/news/2024-10-07-weekly-progress-summary.md","title":"Weekly Summary - October 7, 2024","description":"Weekly Meeting","date":"2024-10-07T00:00:00.000Z","tags":[{"inline":true,"label":"progress","permalink":"/news/tags/progress"},{"inline":true,"label":"update","permalink":"/news/tags/update"},{"inline":true,"label":"weekly","permalink":"/news/tags/weekly"}],"readingTime":0.435,"hasTruncateMarker":false,"authors":[{"name":"William Wolff","title":"Architect","url":"https://github.com/will-break-it","imageURL":"https://avatars.githubusercontent.com/u/9065638?v=4","key":"will"}],"frontMatter":{"title":"Weekly Summary - October 7, 2024","authors":["will"],"tags":["progress","update","weekly"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - October 14, 2024","permalink":"/news/2024/10/14/weekly-progress-summary"},"nextItem":{"title":"Community Round-Table on Leios","permalink":"/news/2024/06/18/community-space"}},"content":"## Weekly Meeting\\n\\n- Discussed Ethereum\'s blob approach and its relevance to Leios.\\n- Considered Leios for storing unstructured, transient data.\\n- Identified potential use cases and next steps for protocol modeling.\\n\\n## Meeting with Spyros\\n\\n- Spyros worked on network simulation for Leios using Peernet.\\n- Focused on bandwidth as a limiting factor and explored block generation\\n  frequency limits.\\n\\n## Structuring Repository for Open-source\\n\\n- Added basic instructions for Code of Conduct, Contribution guidelines, and\\n  coding standards.\\n- Restructured code to merge `leios` and `leios-sim` packages."},{"id":"/2024/06/18/community-space","metadata":{"permalink":"/news/2024/06/18/community-space","source":"@site/news/2024-06-18-community-space.md","title":"Community Round-Table on Leios","description":"On the 14th of June, 2024, along with Pi Lanningham, I was honoured to be invited to the very first Round-Table organised by the Cardano Community group. The discussion was facilitated by Denicio Bernier and Rick McCracken, and was meant to provide a broad overview of Leios, the protocol and the R&D project we have just started working on.","date":"2024-06-18T00:00:00.000Z","tags":[{"inline":true,"label":"education","permalink":"/news/tags/education"}],"readingTime":1.055,"hasTruncateMarker":false,"authors":[{"name":"Arnaud Bailly","title":"Lead Architect","url":"https://github.com/abailly-iohk","imageURL":"https://avatars.githubusercontent.com/u/40221?v=4","key":"abailly"}],"frontMatter":{"title":"Community Round-Table on Leios","authors":["abailly"],"tags":["education"]},"unlisted":false,"prevItem":{"title":"Weekly Summary - October 7, 2024","permalink":"/news/2024/10/07/weekly-progress-summary"}},"content":"On the 14th of June, 2024, along with [Pi Lanningham](https://x.com/Quantumplation), I was honoured to be invited to the very first _Round-Table_ organised by the [Cardano Community](https://x.com/Cardano) group. The discussion was facilitated by [Denicio Bernier](https://x.com/DenicioBernier) and [Rick McCracken](https://x.com/RichardMcCrackn), and was meant to provide a broad overview of _Leios_, the protocol and the R&D project we have just started working on.\\n\\nWe first went through Pi\'s presentation, recalling how _Ouroboros Praos_ works in broad terms and the problem Leios provides a solution for, namely the low throughput of the network. This low throughput is a necessity imposed by diffusion delays across a world spanning network, and constraints of the stake-based sortition algorithm that\'s used to select block-forging leader. By deconnecting the data diffusion and validation process from the blockchain extension process, trading throughput for latency, Leios aims at dramatically increase the number of transactions that can be processed by Cardano.\\n\\nWe then took questions from the audience, detailing some aspects of the protocol, while answering expectations from the community like the expected throughput and availability of benchmarks, the anticipated timeline for Leios, its possible usage for transient data diffusion, and its relationship with other expected Ouroboros extensions like [Peras](https://peras.cardano-scaling.org).\\n\\n* Original [blog post](https://cardano.org/news/2024-06-14-media-understanding-leios-with-pi-lanningham-arnaud-bailly/) on Cardano.org\\n* [X/Twitter](https://x.com/Cardano/status/1802717851544915972) thread\\n* Discussion recording on [YouTube](https://www.youtube.com/watch?v=vpXS9lgL6BA&t=3s)."}]}}')}}]);