"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9121],{111:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=i(4848),t=i(8453);const o={title:"Weekly Summary \u2013 March 10, 2025",authors:["will"],tags:["progress","update","weekly"]},a=void 0,l={permalink:"/news/2025/03/10/weekly-progress-summary",source:"@site/news/2025-03-10-weekly-progress-summary.md",title:"Weekly Summary \u2013 March 10, 2025",description:"This week saw significant progress in simulation capabilities with the successful comparison of Rust and Haskell simulations across 90 scenarios. We conducted our first mainnet-scale analysis of Leios on a mainnet-scale network of 3000 nodes, revealing unexpected performance benefits from network topology. Sharding performance analysis provided important insights into optimization strategies. Both simulation implementations received improvements to enhance realism and comparability, while our formal methods team developed initial trace verification tools for Short Leios.",date:"2025-03-10T00:00:00.000Z",tags:[{inline:!0,label:"progress",permalink:"/news/tags/progress"},{inline:!0,label:"update",permalink:"/news/tags/update"},{inline:!0,label:"weekly",permalink:"/news/tags/weekly"}],readingTime:1.635,hasTruncateMarker:!1,authors:[{name:"William Wolff",title:"Architect",url:"https://github.com/will-break-it",imageURL:"https://avatars.githubusercontent.com/u/9065638?v=4",key:"will"}],frontMatter:{title:"Weekly Summary \u2013 March 10, 2025",authors:["will"],tags:["progress","update","weekly"]},unlisted:!1,nextItem:{title:"Weekly Summary - March 3, 2025",permalink:"/news/2025/03/03/weekly-progress-summary"}},r={authorsImageUrls:[void 0]},u=[{value:"Simulation comparison",id:"simulation-comparison",level:2},{value:"Analysis of mainnet-scale simulation",id:"analysis-of-mainnet-scale-simulation",level:3},{value:"Performance analysis of sharding",id:"performance-analysis-of-sharding",level:3},{value:"Haskell simulation",id:"haskell-simulation",level:2},{value:"Rust simulation",id:"rust-simulation",level:2},{value:"Formal methods",id:"formal-methods",level:2}];function c(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["This week saw significant progress in simulation capabilities with the successful comparison of Rust and Haskell simulations across ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/sims/2025w11/analysis.ipynb",children:"90 scenarios"})}),". We conducted our ",(0,n.jsxs)(s.strong,{children:["first mainnet-scale ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/sims/2025w11xl/analysis.ipynb",children:"analysis"})," of Leios"]})," on a ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/leios-2025w11/sim-rs/test_data/realistic.yaml",children:"mainnet-scale network"})," of 3000 nodes, revealing unexpected performance benefits from network topology. ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/shard-performance.ipynb",children:"Sharding performance analysis"})})," provided important insights into optimization strategies. Both simulation implementations received improvements to enhance realism and comparability, while our formal methods team developed initial trace verification tools for Short Leios."]}),"\n",(0,n.jsx)(s.h2,{id:"simulation-comparison",children:"Simulation comparison"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Compared ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/sims/2025w11/analysis.ipynb",children:"90 scenarios"})," between Rust and Haskell simulations at tag ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/releases/tag/leios-2025w11",children:(0,n.jsx)(s.code,{children:"leios-2025w11"})})]}),"\n",(0,n.jsx)(s.li,{children:"Recent fixes and adjustments enabled meaningful comparison between simulations"}),"\n",(0,n.jsxs)(s.li,{children:["Identified ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/issues?q=is%3Aissue%20state%3Aopen%20label%3Aquestion",children:"issues"})," requiring further investigation."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"analysis-of-mainnet-scale-simulation",children:"Analysis of mainnet-scale simulation"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Completed first ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/sims/2025w11xl/analysis.ipynb",children:"analysis"})," of Leios on a mainnet-scale network simulation using Rust simulator"]}),"\n",(0,n.jsx)(s.li,{children:"Discovered 3000-node mainnet-scale network transports IBs faster than artificial 100-node network"}),"\n",(0,n.jsx)(s.li,{children:'Identified "shortcut" edges in larger networks as likely reason for improved transport speed.'}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/sims/2025w11xl/plots/elapsed-IB-rust.png?raw=true",alt:"In-flight time for Input Blocks (IBs)"})}),"\n",(0,n.jsx)(s.h3,{id:"performance-analysis-of-sharding",children:"Performance analysis of sharding"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Created ",(0,n.jsx)(s.a,{href:"https://github.com/input-output-hk/ouroboros-leios/blob/weekly-update-2025-03-10/analysis/shard-performance.ipynb",children:"computational models"})," showing relationship between fraction of shards without an IB and expected number of extra IBs"]}),"\n",(0,n.jsx)(s.li,{children:"Evaluated performance characteristics of the simplest sharding scheme."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://github.com/input-output-hk/ouroboros-leios/raw/weekly-update-2025-03-10/analysis/shard-performance.svg",alt:"Performance analysis of simple sharding"})}),"\n",(0,n.jsx)(s.h2,{id:"haskell-simulation",children:"Haskell simulation"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Fixed bug in Relay protocol preventing full diffusion of votes"}),"\n",(0,n.jsx)(s.li,{children:"Changed priority of certified EB to be included in RB"}),"\n",(0,n.jsx)(s.li,{children:"Added support for output log format sharing a common subset with the Rust sim"}),"\n",(0,n.jsxs)(s.li,{children:["Analyzed TCP realism in comparison to idealized diffusion","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Found higher IB rate and size leads to better diffusion times"}),"\n",(0,n.jsx)(s.li,{children:"Identified ledger state access as significant source of latency."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"rust-simulation",children:"Rust simulation"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Added more information to logs (total size of IB, parent id of RB)"}),"\n",(0,n.jsx)(s.li,{children:"Implemented same EB selection strategy as Haskell"}),"\n",(0,n.jsx)(s.li,{children:"Added validation of IB headers before propagation to neighbors"}),"\n",(0,n.jsx)(s.li,{children:"Investigating why the simulation doesn't encounter as much congestion as Haskell."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"formal-methods",children:"Formal methods"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Developed initial trace verifier for Short Leios simulation traces in ",(0,n.jsx)(s.code,{children:"leios-trace-verifier"}),"."]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>l});var n=i(6540);const t={},o=n.createContext(t);function a(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);