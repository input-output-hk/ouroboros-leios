{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "CleanupPolicies": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/definitions/CleanupPolicy"
          },
          "type": "array"
        },
        {
          "const": "all",
          "type": "string"
        }
      ]
    },
    "CleanupPolicy": {
      "enum": [
        "cleanup-expired-certificate",
        "cleanup-expired-ib",
        "cleanup-expired-unadopted-eb",
        "cleanup-expired-uncertified-eb",
        "cleanup-expired-vote"
      ],
      "type": "string"
    },
    "ConstantDistribution": {
      "properties": {
        "distribution": {
          "const": "constant",
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "DiffusionStrategy": {
      "enum": ["peer-order", "freshest-first", "oldest-first"],
      "type": "string"
    },
    "Distribution": {
      "anyOf": [
        {
          "$ref": "#/definitions/NormalDistribution"
        },
        {
          "$ref": "#/definitions/ExpDistribution"
        },
        {
          "$ref": "#/definitions/LogNormalDistribution"
        },
        {
          "$ref": "#/definitions/ConstantDistribution"
        }
      ]
    },
    "ExpDistribution": {
      "properties": {
        "distribution": {
          "const": "exp",
          "type": "string"
        },
        "lambda": {
          "type": "number"
        },
        "scale": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "LeiosVariant": {
      "enum": ["short", "full"],
      "type": "string"
    },
    "LogNormalDistribution": {
      "properties": {
        "distribution": {
          "const": "log-normal",
          "type": "string"
        },
        "mu": {
          "type": "number"
        },
        "sigma": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "NormalDistribution": {
      "properties": {
        "distribution": {
          "const": "normal",
          "type": "string"
        },
        "mean": {
          "type": "number"
        },
        "std_dev": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "RelayStrategy": {
      "enum": ["request-from-all", "request-from-first"],
      "type": "string"
    }
  },
  "description": "A configuration for a Leios simulation.",
  "properties": {
    "cert-generation-cpu-time-ms-constant": {
      "type": "number"
    },
    "cert-generation-cpu-time-ms-per-node": {
      "type": "number"
    },
    "cert-size-bytes-constant": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "cert-size-bytes-per-node": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "cert-validation-cpu-time-ms-constant": {
      "type": "number"
    },
    "cert-validation-cpu-time-ms-per-node": {
      "type": "number"
    },
    "cleanup-policies": {
      "$ref": "#/definitions/CleanupPolicies",
      "description": "Only supported by Haskell simulation."
    },
    "eb-diffusion-max-bodies-to-request": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "eb-diffusion-max-headers-to-request": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "eb-diffusion-max-window-size": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "eb-diffusion-strategy": {
      "$ref": "#/definitions/DiffusionStrategy",
      "description": "Only supported by Haskell simulation."
    },
    "eb-generation-cpu-time-ms": {
      "type": "number"
    },
    "eb-generation-probability": {
      "type": "number"
    },
    "eb-max-age-for-relay-slots": {
      "additionalProperties": false,
      "description": "The maximum age of EBs to be relayed.\n\nAn EB from slot `s` will only be relayed\nup to slot `s+eb-max-age-for-relay-slots`.\n\nOnly supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "eb-max-age-slots": {
      "additionalProperties": false,
      "description": "The maximum age of EBs included in RBs.\n\nAn EB from slot `s` can only be included in RBs\nup to slot `s+eb-max-age-slots`.\n\nIn short leios we expect votes to diffuse within 3 stages lengths of\nEB generation, we allow for 2 more stage lengths to account for\nvariance in the interval within RBs.",
      "properties": {},
      "type": "number"
    },
    "eb-size-bytes-constant": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "eb-size-bytes-per-ib": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "eb-validation-cpu-time-ms": {
      "type": "number"
    },
    "ib-body-avg-size-bytes": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "ib-body-max-size-bytes": {
      "additionalProperties": false,
      "description": "Only supported by Rust simulation.",
      "properties": {},
      "type": "number"
    },
    "ib-body-validation-cpu-time-ms-constant": {
      "type": "number"
    },
    "ib-body-validation-cpu-time-ms-per-byte": {
      "type": "number"
    },
    "ib-diffusion-max-bodies-to-request": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "ib-diffusion-max-headers-to-request": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "ib-diffusion-max-window-size": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "ib-diffusion-strategy": {
      "$ref": "#/definitions/DiffusionStrategy"
    },
    "ib-generation-cpu-time-ms": {
      "type": "number"
    },
    "ib-generation-probability": {
      "type": "number"
    },
    "ib-head-size-bytes": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "ib-head-validation-cpu-time-ms": {
      "type": "number"
    },
    "ib-shard-group-count": {
      "description": "The \"k\" IB sharding parameter.\nControls how many groups of shards are assigned at a time.\n\nOnly supported by Rust simulation.",
      "type": "number"
    },
    "ib-shard-period-length-slots": {
      "description": "The \"m\" IB sharding parameter.\nControls how many slots in a row will use the same list of shards.\n\nOnly supported by Rust simulation.",
      "type": "number"
    },
    "ib-shards": {
      "description": "The total number of shards available for IBs.\nMust be divisible by ib_shard_group_count.\n\nOnly supported by Rust simulation.",
      "type": "number"
    },
    "leios-header-diffusion-time-ms": {
      "description": "The expected time it takes a header to fully diffuse across the network.\nThis is Δhdr from the Leios paper.",
      "type": "number"
    },
    "leios-late-ib-inclusion": {
      "description": "Extends Leios so that EB producers include IBs directly from previous pipelines\nwhere no certified EB was observed.\n\nOnly supported by Rust simulation.",
      "type": "boolean"
    },
    "leios-stage-active-voting-slots": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "leios-stage-length-slots": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "leios-variant": {
      "$ref": "#/definitions/LeiosVariant"
    },
    "leios-vote-send-recv-stages": {
      "description": "Determines whether a Leios pipeline has separate Vote (Send) and Vote (Recv) stages.\nIf this is set to `true`, it is recommended to set `leios-stage-active-voting-slots`\nto be equal to `leios-stage-length-slots`.\n\nOnly supported by Haskell simulation.",
      "type": "boolean"
    },
    "multiplex-mini-protocols": {
      "description": "Only supported by Haskell simulation.",
      "type": "boolean"
    },
    "praos-chain-quality": {
      "description": "Praos blockchain quality parameter.\nThis is η from the Leios paper.\nControls the pipelines EBs should reference in Full leios:\n  i - ⌈3η/L⌉, …, i-3\nwhere i is the index of the current pipeline.",
      "type": "number"
    },
    "rb-body-legacy-praos-payload-avg-size-bytes": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "rb-body-legacy-praos-payload-validation-cpu-time-ms-constant": {
      "type": "number"
    },
    "rb-body-legacy-praos-payload-validation-cpu-time-ms-per-byte": {
      "type": "number"
    },
    "rb-body-max-size-bytes": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "rb-generation-cpu-time-ms": {
      "type": "number"
    },
    "rb-generation-probability": {
      "type": "number"
    },
    "rb-head-size-bytes": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "rb-head-validation-cpu-time-ms": {
      "type": "number"
    },
    "relay-strategy": {
      "$ref": "#/definitions/RelayStrategy"
    },
    "simulate-transactions": {
      "description": "Only supported by Rust simulation.",
      "type": "boolean"
    },
    "tcp-congestion-control": {
      "description": "Only supported by Haskell simulation.",
      "type": "boolean"
    },
    "treat-blocks-as-full": {
      "description": "When `true`, any delays and message sizes are calculated as if\neach block contained as much data as the expected average, rounded up.\nIn particular, for the sake of the above, we consider that:\n  - Each RB includes a certificate.\n  - Certificates contain votes from `vote-threshold` nodes.\n  - Vote bundles vote for `ceil eb-generation-probability` EBs.\n  - EBs reference `ceil (ib-generation-probability * leios-stage-length-slots)` IBs.\nOnly supported by Haskell simulation.",
      "type": "boolean"
    },
    "tx-generation-distribution": {
      "$ref": "#/definitions/Distribution",
      "description": "Only supported by Rust simulation."
    },
    "tx-max-size-bytes": {
      "additionalProperties": false,
      "description": "Only supported by Rust simulation.",
      "properties": {},
      "type": "number"
    },
    "tx-sharded-percentage": {
      "description": "What percentage of transactions have at least one sharded input?\n\nOnly supported by Rust simulation.",
      "type": "number"
    },
    "tx-size-bytes-distribution": {
      "$ref": "#/definitions/Distribution",
      "description": "Only supported by Rust simulation."
    },
    "tx-validation-cpu-time-ms": {
      "description": "Only supported by Rust simulation.",
      "type": "number"
    },
    "vote-bundle-size-bytes-constant": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "vote-bundle-size-bytes-per-eb": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "vote-diffusion-max-bodies-to-request": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "vote-diffusion-max-headers-to-request": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "vote-diffusion-max-window-size": {
      "additionalProperties": false,
      "description": "Only supported by Haskell simulation.",
      "properties": {},
      "type": "number"
    },
    "vote-diffusion-strategy": {
      "$ref": "#/definitions/DiffusionStrategy",
      "description": "Only supported by Haskell simulation."
    },
    "vote-generation-cpu-time-ms-constant": {
      "type": "number"
    },
    "vote-generation-cpu-time-ms-per-ib": {
      "type": "number"
    },
    "vote-generation-probability": {
      "type": "number"
    },
    "vote-threshold": {
      "additionalProperties": false,
      "properties": {},
      "type": "number"
    },
    "vote-validation-cpu-time-ms": {
      "type": "number"
    }
  },
  "type": "object"
}
