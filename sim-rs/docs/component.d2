title: {
  label: "sim-rs - C4 Component Diagram"
  near: top-center
  shape: text
  style.font-size: 24
  style.bold: true
}

# Styles
classes: {
  component: {
    style: {
      stroke: "#2a2a2a"
      fill: "#ffffff"
      font-color: "#2a2a2a"
      border-radius: 10
      shadow: true
    }
  }
  container: {
    style: {
      stroke: "#2a2a2a"
      fill: "#f5f5f5"
      font-color: "#2a2a2a"
      border-radius: 10
      shadow: true
    }
  }
}

# Main Containers
sim-cli: {
  class: container
  label: "sim-cli\nCommand line interface for running simulations"

  events: {
    class: component
    label: "EventMonitor\nTracks and aggregates simulation events"
  }

  main: {
    class: component
    label: "Main\nBootstraps simulation and handles CLI args"
  }
}

gen-test-data: {
  class: component
  label: "gen-test-data\nCommand line interface for generating input"
}

sim-core: {
  class: container
  label: "sim-core\nCore simulation engine"

  clock: {
    class: component
    label: "Clock\nManages simulation time"
  }

  config: {
    class: component
    label: "Configuration\nHandles simulation config"
  }

  events: {
    class: component
    label: "EventTracker\nTracks simulation events"
  }

  model: {
    class: component
    label: "Model\nCore domain models"
  }

  network: {
    class: component
    label: "Network\nSimulates network communication"
  }

  node: {
    class: component
    label: "Node\nSimulates behavior of an individual node"
  }

  probability: {
    class: component
    label: "Probability\nProbability distributions"
  }

  simulation: {
    class: component
    label: "Simulation\nMain simulation logic"
  }

  slot-witness: {
    class: component
    label: "Slot Witness\nEmits events on new slots"
  }

  tx-producer: {
    class: component
    label: "Transaction Producer\nGenerates transactions, sends them to nodes"
  }
}

# Relationships
sim-cli.main -> sim-cli.events: "Creates"
sim-cli.main -> sim-core.simulation: "Initializes"
sim-cli.events -> sim-core.events: "Receives events from"

gen-test-data -> sim-core.config: "Generates"

sim-core.simulation -> sim-core.config: "Configured by"
sim-core.simulation -> sim-core.node: "Manages"
sim-core.simulation -> sim-core.slot-witness: "Manages"
sim-core.simulation -> sim-core.tx-producer: "Manages"

sim-core.node -> sim-core.clock: "Tracks new slots via"
sim-core.node -> sim-core.model: "Uses"
sim-core.node -> sim-core.network: "Sends messages via"
sim-core.node -> sim-core.probability: "Uses"
sim-core.node -> sim-core.events: "Emits events to"

sim-core.slot-witness -> sim-core.clock: "Tracks new slots via"
sim-core.slot-witness -> sim-core.events: "Emits events to"

sim-core.tx-producer -> sim-core.clock: "Schedules new TXs via"
sim-core.tx-producer -> sim-core.node: "Sends TXs to"
sim-core.tx-producer -> sim-core.probability: "Uses"

sim-core.network -> sim-core.clock: "Schedules messages via"
sim-core.network -> sim-core.model: "Transmits"

sim-core.events -> sim-core.model: "References"
