This file contains several formulas that may or may not model some systems described in some papers.

1 -- TR1 wrong Cardano model

hop := CDF[(0.012, 0.333), (0.069, 0.666), (0.268, 1)] ->- CDF[(0.024, 0.333), (0.143, 0.666), (0.531, 1)]
prop := hop 1<>99 hop ->- hop 5<>94 hop ->- hop ->- hop 34<>60 hop ->- hop ->- hop ->- hop 59<>1 hop ->- hop ->- hop ->- hop ->- hop

2 -- TR1 used Cardano model

hop := CDF[(0.012, 0.333), (0.069, 0.666), (0.268, 1)] ->- CDF[(0.012, 0.333), (0.069, 0.666), (0.268, 1)] ->- CDF[(0.012, 0.333), (0.069, 0.666), (0.268, 1)] ->- CDF[(0.024, 0.333), (0.143, 0.666), (0.531, 1)]
prop := hop 0.6<>99.4 hop ->- hop 8.58<>90.82 hop ->- hop ->- hop 65.86<>24.96 hop ->- hop ->- hop ->- hop

3 -- Leios modelling session on Oct 4, 2024

diffuse:
(hop 0.6<>99.4 ((hop ->- hop) 8.58<>90.82 (((hop ->- hop) ->- hop) 65.86<>24.96 (((hop ->- hop) ->- hop) ->- hop)))) ->- validateIB

diffuseEB:
(hopSmall 0.6<>99.4 ((hopSmall ->- hopSmall) 8.58<>90.82 (((hopSmall ->- hopSmall) ->- hopSmall) 65.86<>24.96 (((hopSmall ->- hopSmall) ->- hopSmall) ->- hopSmall)))) ->- validateEB

hop:
((smallBlock ->- smallBlock) ->- smallBlock) ->- largeBlock

hopSmall:
((smallBlock ->- smallBlock) ->- smallBlock) ->- mediumBlock

largeBlock:
CDF[(0.078, 0.333), (0.404, 0.666), (1.598, 1)]

mediumBlock:
CDF[(0.024, 0.333), (0.143, 0.666), (0.531, 1)]

smallBlock:
CDF[(0.012, 0.333), (0.069, 0.666), (0.268, 1)]

validateEB:
CDF[(1, 1)]

validateIB:
CDF[(3, 1)]

=================================================================
4 -- better modelling of Leios (in format for import into editor)
=================================================================

-- diffusion of one IB (assuming 1MB)
diffuseIB := hopIB 0.6<>99.4 ((hopIB ->- hopIB) 8.58<>90.82 (((hopIB ->- hopIB) ->- hopIB) 65.86<>24.96 (((hopIB ->- hopIB) ->- hopIB) ->- hopIB)))
-- diffusion of one EB (assuming 64kB)
diffuseEB := hopEB 0.6<>99.4 ((hopEB ->- hopEB) 8.58<>90.82 (((hopEB ->- hopEB) ->- hopEB) 65.86<>24.96 (((hopEB ->- hopEB) ->- hopEB) ->- hopEB)))

-- single link latencies across continents
far := CDF[(0.268, 1)]
farL := CDF[(0.531, 1)]
farXL := CDF[(1.598, 1)]

-- single link latencies between data centers within a continent
mid := CDF[(0.069, 1)]
midL := CDF[(0.143, 1)]
midXL := CDF[(0.404, 1)]

-- single link latencies within a data center
near := CDF[(0.012, 1)]
nearL := CDF[(0.024, 1)]
nearXL := CDF[(0.078, 1)]

-- a hop (for an IB or EB) is a choice of near/mid/far with req-res-req-resLarge in each arm
hopIB := (((near ->- near) ->- near) ->- nearXL) 1<>2 ((((mid ->- mid) ->- mid) ->- midXL) 1<>1 (((far ->- far) ->- far) ->- farXL))
hopEB := (((near ->- near) ->- near) ->- nearL) 1<>2 ((((mid ->- mid) ->- mid) ->- midL) 1<>1 (((far ->- far) ->- far) ->- farL))

=======================================
5 -- Leios model including network load
=======================================
(this isn’t yet a model of the actual Leios, just playing around with the necessary primitives)

TOP := CDF[(0, 1)]
diffuseEB >= round := TOP ->-×15 hopEB 0.6<>99.4 TOP ->-×15 hopEB ->-×15 hopEB 8.58<>90.82 TOP ->-×15 hopEB ->-×15 hopEB ->-×15 hopEB 65.86<>24.96 TOP ->-×15 hopEB ->-×15 hopEB ->-×15 hopEB ->-×15 hopEB
diffuseIB >= round := TOP ->-×15 hopIB 0.6<>99.4 TOP ->-×15 hopIB ->-×15 hopIB 8.58<>90.82 TOP ->-×15 hopIB ->-×15 hopIB ->-×15 hopIB 65.86<>24.96 TOP ->-×15 hopIB ->-×15 hopIB ->-×15 hopIB ->-×15 hopIB
far := CDF[(0.268, 1)] WITH net[(0, 5597), (0.268, 0)]
farL := CDF[(0.531, 1)] WITH net[(0, 120527), (0.531, 0)]
farXL := CDF[(1.598, 1)] WITH net[(0, 625782), (1.598, 0)]
hopEB := ((near ->- near) ->- near) ->- nearL 1<>2 ((mid ->- mid) ->- mid) ->- midL 1<>1 ((far ->- far) ->- far) ->- farL
hopIB := ((near ->- near) ->- near) ->- nearXL 1<>2 ((mid ->- mid) ->- mid) ->- midXL 1<>1 ((far ->- far) ->- far) ->- farXL
mid := CDF[(0.069, 1)] WITH net[(0, 21739), (0.069, 0)]
midL := CDF[(0.143, 1)] WITH net[(0, 447552), (0.143, 0)]
midXL := CDF[(0.404, 1)] WITH net[(0, 2475247), (0.404, 0)]
near := CDF[(0.012, 1)] WITH netNear[(0, 125000), (0.012, 0)]
nearL := CDF[(0.024, 1)] WITH netNear[(0, 2666667), (0.024, 0)]
nearXL := CDF[(0.078, 1)] WITH netNear[(0, 12820513), (0.078, 0)]
round := CDF[(20, 1)]
someRounds := ∀(round | TOP ->-×5 diffuseIB) ->- ∀(round | TOP ->-×20 diffuseEB)

=============================================
6 -- Short-Leios model including network load
=============================================

_1_parallelBurst := all(_2_pipelineBurst | all(_4_slices^1 ->- _2_pipelineBurst | all(_4_slices^2 ->- _2_pipelineBurst | all(_4_slices^3 ->- _2_pipelineBurst | all(_4_slices^4 ->- _2_pipelineBurst | all(_4_slices^5 ->- _2_pipelineBurst | all(_4_slices^6 ->- _2_pipelineBurst | _4_slices^7 ->- _2_pipelineBurst)))))))
_1_parallelUniform := all(_2_pipelineUniform | all(_4_slices^1 ->- _2_pipelineUniform | all(_4_slices^2 ->- _2_pipelineUniform | all(_4_slices^3 ->- _2_pipelineUniform | all(_4_slices^4 ->- _2_pipelineUniform | all(_4_slices^5 ->- _2_pipelineUniform | all(_4_slices^6 ->- _2_pipelineUniform | _4_slices^7 ->- _2_pipelineUniform)))))))
_2_pipelineBurst := _3_pipelin_B ->- _3_endorse
_2_pipelineUniform := _3_pipelin_U ->- _3_endorse
_3_endorse := CDF[(0, 1)] ->-*2.5 _3_endorse1
_3_endorse1 := all(gossip(_7_hopEB, 2500, 15, 0.07) | _4_slice) ->- gossip(_7_hopVote, 2500, 15, 0.07)
_3_pipelin_B := CDF[(0, 1)] ->-*10 all(gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice)
_3_pipelin_U := all(_3_pipeline0 | all(_3_pipeline1 | all(_3_pipeline2 | all(_3_pipeline3 | all(_3_pipeline4 | all(_3_pipeline5 | all(_3_pipeline6 | all(_3_pipeline7 | all(_3_pipeline8 | _3_pipeline9)))))))))
_3_pipeline0 := all(gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline1 := all(CDF[(1,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline2 := all(CDF[(2,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline3 := all(CDF[(3,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline4 := all(CDF[(4,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline5 := all(CDF[(5,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline6 := all(CDF[(6,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline7 := all(CDF[(7,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline8 := all(CDF[(8,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_3_pipeline9 := all(CDF[(9,1)] ->- gossip(_7_hopIB, 2500, 15, 0.07) | _4_slice ->- _4_slice) ->- _4_slice
_4_slice := CDF[(10, 1)]
_4_slices := _4_slice ->- _4_slices
_7_hopEB := _7_sendEB_near ->- (_7_sendEB_near 1<>1 _7_sendEB_far) ->- _7_sendEB_near
_7_hopIB := _7_sendIB_near ->- (_7_sendIB_near 1<>1 _7_sendIB_far) ->- _7_sendIB_near
_7_hopVote := _7_sendVote_near ->- (_7_sendVote_near 1<>1 _7_sendVote_far) ->- _7_sendVote_near
_7_sendEB_far := (_9_mid ->- _9_mid ->- _9_mid ->- _9_midL 1<>1 _9_far ->- _9_far ->- _9_far ->- _9_farL) ->- _8_validate
_7_sendEB_near := _9_near ->- _9_near ->- _9_near ->- _9_nearL ->- _8_validate
_7_sendIB_far := (_9_mid ->- _9_mid ->- _9_mid ->- _9_midXL 1<>1 _9_far ->- _9_far ->- _9_far ->- _9_farXL) ->- _8_validate
_7_sendIB_near := _9_near ->- _9_near ->- _9_near ->- _9_nearXL ->- _8_validate
_7_sendVote_far := (_9_mid ->- _9_mid ->- _9_mid ->- _9_mid 1<>1 _9_far ->- _9_far ->- _9_far ->- _9_far) ->- _8_validate
_7_sendVote_near := _9_near ->- _9_near ->- _9_near ->- _9_near ->- _8_validate
_8_validate := CDF[(0.1, 1)] WITH cpu[(0, 1), (0.1, 0)]
_9_far := CDF[(0.268, 1)] WITH net[(0, 5597), (0.268, 0)]
_9_farL := CDF[(0.531, 1)] WITH net[(0, 120527), (0.531, 0)]
_9_farXL := CDF[(1.598, 1)] WITH net[(0, 625782), (1.598, 0)]
_9_mid := CDF[(0.069, 1)] WITH net[(0, 21739), (0.069, 0)]
_9_midL := CDF[(0.143, 1)] WITH net[(0, 447552), (0.143, 0)]
_9_midXL := CDF[(0.404, 1)] WITH net[(0, 2475247), (0.404, 0)]
_9_near := CDF[(0.012, 1)]
_9_nearL := CDF[(0.024, 1)]
_9_nearXL := CDF[(0.078, 1)]
